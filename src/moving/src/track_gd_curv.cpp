#include <ros/ros.h>
#include "geometry_msgs/Twist.h"
#include "nav_msgs/Odometry.h"
#include "math.h"
#include "tf/transform_datatypes.h"
#include "nav_msgs/Path.h"
#include "geometry_msgs/Quaternion.h"
#include "geometry_msgs/PoseStamped.h"
#include <visualization_msgs/MarkerArray.h>
#include <visualization_msgs/Marker.h>
#include<canlib.h>
#include<stdio.h>
#include <ros/ros.h>
#include <tf/transform_listener.h>
#include <geometry_msgs/Twist.h>
#include <iostream>
#include <endian.h>
#include<Eigen/Core>
#include<Eigen/Geometry>
#include <Eigen/Dense>
//声明变量

using namespace std;
using namespace Eigen;
  double tar_x[500];
  double tar_y[500];
  double tar_theta[500];
  double curv[500];
  int count_path;
  int angle;
  double cur_angle;
  double target_x;
  double target_y;
  int num;
  int num_;
  int count;
  int count_tar;
  double r;
  double theta1,theta2,theta3,theta4,theta_temp;
  double v1,v2,v3,v4;
  double d_min;
  int count_d;
  double d_temp;
  double x_init,y_init;
  double x,y,z;
  unsigned int flag;
  long id;
  long id_1;
  uint8_t buffer[8];
  long int msg1,msg_2,msg_3;
  int int_theta1,int_theta2,int_v1,int_v2;
  unsigned int dlc;
  int count_2;
  double d;
  double theta,target_angle;
  double roll,pitch,yaw;
  int count_init;
  double d_ym;
  double abs_theta;
  int min_ind;
  double d_min_init;
  double v_pp;
  int error_count;
  double error,sum_er;
  double sum_angle_delta,angle_delta;
  double rt_angle;
  double d_tar;
  double delta_angle_l,delta_angle_r;
  double last_angle_r,last_angle_l,angle_delta_l,angle_delta_r;
  int sec_min_ind;
  double error_ins;
  double fun_a,fun_b;
  double d_curv;
  Eigen::Vector3d v_result;
  int p_size;
   double re_x[2000];
   double re_y[2000];
   double re_d[2000];
   int re_count;
   double re_w[2000];
  

void show_x(int re_count)
{
    for(int i=0;i<re_count;i++)
    {
        printf("%f\n",re_x[i]);
    }
}

void show_y(int re_count)
{
    for(int i=0;i<re_count;i++)
    {
        printf("%f\n",re_y[i]);
    }
}

void show_d(int re_count)
{
    for(int i=0;i<re_count;i++)
    {
        printf("%f\n",re_d[i]);
    }
}
void show_w(int re_count)
{
    for(int i=0;i<re_count;i++)
    {
        printf("%f\n",re_w[i]);
    }
}
void dec_min(const double& x_,const double& y_,double* tar_x,double* tar_y)
{
    double dec_d_min,dec_d_temp;
    double d_fro,d_rear;
    int dec_min_ind;
    int find_ind;
    dec_min_ind=0;
    dec_d_min=sqrt((x_-tar_x[0])*(x_-tar_x[0])+(y_-tar_y[0])*(y_-tar_y[0]));
    for(int dec_i=1;dec_i<257;dec_i++)
    {
      dec_d_temp=sqrt((x_-tar_x[dec_i])*(x_-tar_x[dec_i])+(y_-tar_y[dec_i])*(y_-tar_y[dec_i]));
      if(dec_d_temp<dec_d_min)
      {
          dec_d_min=dec_d_temp;
          dec_min_ind=dec_i;
      }
    }
    d_min=dec_d_min;
    find_ind=dec_min_ind;

    if(find_ind>0 && find_ind<257)
  {
  d_fro=sqrt((tar_x[find_ind+1]-x_init)*(tar_x[find_ind+1]-x_init)+(tar_y[find_ind+1]-y_init)*(tar_y[find_ind+1]-y_init));
  d_rear=sqrt((tar_x[find_ind-1]-x_init)*(tar_x[find_ind-1]-x_init)+(tar_y[find_ind-1]-y_init)*(tar_y[find_ind-1]-y_init));
  min_ind=find_ind;
  if(d_fro<d_rear || d_fro==d_rear)
 {
   sec_min_ind=find_ind+1;
 }
 else
 {
   sec_min_ind=find_ind-1;
 }
}
if(find_ind==0)
{
  min_ind=0;
  sec_min_ind=1;
}
    return;
}

void find_min_ind(const double& x_init,const double& y_init,const double& yaw)
{
  int ind_temp[500];
  int find_j,find_ind;
  double d_fro,d_rear;
  double find_d,find_d_temp;
  find_j=0;
  for(int find_i=0;find_i<p_size+1;find_i++)
  {
    double find_theta_temp;
    find_theta_temp=yaw*57.29578-tar_theta[find_i];
    if(find_theta_temp>180)
    {
      find_theta_temp=find_theta_temp-360;
    }
    if(find_theta_temp<-180)
    {
      find_theta_temp=find_theta_temp+360;
    }
    if(fabs(find_theta_temp)<90)
    {
        ind_temp[find_j]=find_i;
        find_j++;
    }
  }
  find_d=sqrt((tar_x[ind_temp[0]]-x_init)*(tar_x[ind_temp[0]]-x_init)+(tar_y[ind_temp[0]]-y_init)*(tar_y[ind_temp[0]]-y_init));
  find_ind=ind_temp[0];
  for(int find_k=1;find_k<find_j;find_k++)
  {
     find_d_temp=sqrt((tar_x[ind_temp[find_k]]-x_init)*(tar_x[ind_temp[find_k]]-x_init)+(tar_y[ind_temp[find_k]]-y_init)*(tar_y[ind_temp[find_k]]-y_init));
     if(find_d>find_d_temp)
     {
       find_d=find_d_temp;
       find_ind=ind_temp[find_k];
     }
  }
  d_min=find_d;
  min_ind=find_ind;
  if(find_ind>0 && find_ind<p_size)
  {
  d_fro=sqrt((tar_x[find_ind+1]-x_init)*(tar_x[find_ind+1]-x_init)+(tar_y[find_ind+1]-y_init)*(tar_y[find_ind+1]-y_init));
  d_rear=sqrt((tar_x[find_ind-1]-x_init)*(tar_x[find_ind-1]-x_init)+(tar_y[find_ind-1]-y_init)*(tar_y[find_ind-1]-y_init));
  min_ind=find_ind;
  if(d_fro<d_rear || d_fro==d_rear)
 {
   sec_min_ind=find_ind+1;
 }
 else
 {
   sec_min_ind=find_ind-1;
 }
}
if(find_ind==0)
{
  min_ind=0;
  sec_min_ind=1;
}
  return ;
}

int main(int argc, char **argv)
{
  
	
//赋值
 
 tar_x[5]=0.166234;
 tar_y[5]=0.717118;
 tar_x[6]=0.482546;
 tar_y[6]=0.707553;
 tar_x[7]=0.793526;
 tar_y[7]=0.701546;
 tar_x[8]=1.098287;
 tar_y[8]=0.704099;
 tar_x[9]=1.379419;
 tar_y[9]=0.693288;
 tar_x[10]=1.700987;
 tar_y[10]=0.695169;
 tar_x[11]=2.010806;
 tar_y[11]=0.688604;
 tar_x[12]=2.316776;
 tar_y[12]=0.713575;
 tar_x[13]=2.615586;
 tar_y[13]=0.709380;
 tar_x[14]=2.915184;
 tar_y[14]=0.706296;
 tar_x[15]=3.215049;
 tar_y[15]=0.705521;
 tar_x[16]=3.508333;
 tar_y[16]=0.699257;
 tar_x[17]=3.800266;
 tar_y[17]=0.696974;
 tar_x[18]=4.096155;
 tar_y[18]=0.696862;
 tar_x[19]=4.398743;
 tar_y[19]=0.700682;
 tar_x[20]=4.685294;
 tar_y[20]=0.696850;
 tar_x[21]=4.970318;
 tar_y[21]=0.693868;
 tar_x[22]=5.264818;
 tar_y[22]=0.688142;
 tar_x[23]=5.556486;
 tar_y[23]=0.685990;
 tar_x[24]=5.816729;
 tar_y[24]=0.713581;
 tar_x[25]=6.008043;
 tar_y[25]=0.776134;
 tar_x[26]=6.188371;
 tar_y[26]=0.829324;
 tar_x[27]=6.359057;
 tar_y[27]=0.914519;
 tar_x[28]=6.579622;
 tar_y[28]=1.012904;
 tar_x[29]=6.772966;
 tar_y[29]=1.127265;
 tar_x[30]=6.959725;
 tar_y[30]=1.266403;
 tar_x[31]=7.169576;
 tar_y[31]=1.434016;
 tar_x[32]=7.379439;
 tar_y[32]=1.594235;
 tar_x[33]=7.575871;
 tar_y[33]=1.723814;
 tar_x[34]=7.789216;
 tar_y[34]=1.851912;
 tar_x[35]=8.008689;
 tar_y[35]=1.929586;
 tar_x[36]=8.219540;
 tar_y[36]=1.993113;
 tar_x[37]=8.455388;
 tar_y[37]=2.032664;
 tar_x[38]=8.698713;
 tar_y[38]=2.062177;
 tar_x[39]=8.973379;
 tar_y[39]=2.072125;
 tar_x[40]=9.272554;
 tar_y[40]=2.083026;
 tar_x[41]=9.585761;
 tar_y[41]=2.104136;
 tar_x[42]=9.869749;
 tar_y[42]=2.108367;
 tar_x[43]=10.162581;
 tar_y[43]=2.097966;
 tar_x[44]=10.454621;
 tar_y[44]=2.096026;
 tar_x[45]=10.754468;
 tar_y[45]=2.085315;
 tar_x[46]=11.049094;
 tar_y[46]=2.079002;
 tar_x[47]=11.347845;
 tar_y[47]=2.076082;
 tar_x[48]=11.636951;
 tar_y[48]=2.070308;
 tar_x[49]=11.945019;
 tar_y[49]=2.056054;
 tar_x[50]=12.229628;
 tar_y[50]=2.052789;
 tar_x[51]=12.537690;
 tar_y[51]=2.040585;
 tar_x[52]=12.839373;
 tar_y[52]=2.028260;
 tar_x[53]=13.139316;
 tar_y[53]=2.027685;
 tar_x[54]=13.442912;
 tar_y[54]=2.024657;
 tar_x[55]=13.750995;
 tar_y[55]=2.021456;
 tar_x[56]=14.070208;
 tar_y[56]=2.013849;
 tar_x[57]=14.372508;
 tar_y[57]=2.006390;
 tar_x[58]=14.674674;
 tar_y[58]=1.993526;
 tar_x[59]=14.965075;
 tar_y[59]=1.998911;
 tar_x[60]=15.241080;
 tar_y[60]=1.974475;
 tar_x[61]=15.504838;
 tar_y[61]=1.941569;
 tar_x[62]=15.753900;
 tar_y[62]=1.902834;
 tar_x[63]=16.000023;
 tar_y[63]=1.844031;
 tar_x[64]=16.267655;
 tar_y[64]=1.771776;
 tar_x[65]=16.520372;
 tar_y[65]=1.678138;
 tar_x[66]=16.762767;
 tar_y[66]=1.585371;
 tar_x[67]=17.012922;
 tar_y[67]=1.458804;
 tar_x[68]=17.269632;
 tar_y[68]=1.332957;
 tar_x[69]=17.509733;
 tar_y[69]=1.197989;
 tar_x[70]=17.746707;
 tar_y[70]=1.057488;
 tar_x[71]=17.992138;
 tar_y[71]=0.888828;
 tar_x[72]=18.234263;
 tar_y[72]=0.728747;
 tar_x[73]=18.484118;
 tar_y[73]=0.574780;
 tar_x[74]=18.720615;
 tar_y[74]=0.440497;
 tar_x[75]=18.961880;
 tar_y[75]=0.331899;
 tar_x[76]=19.213462;
 tar_y[76]=0.259629;
 tar_x[77]=19.453043;
 tar_y[77]=0.208457;
 tar_x[78]=19.682085;
 tar_y[78]=0.184649;
 tar_x[79]=19.908641;
 tar_y[79]=0.159686;
 tar_x[80]=20.190897;
 tar_y[80]=0.150583;
 tar_x[81]=20.482196;
 tar_y[81]=0.144939;
 tar_x[82]=20.780443;
 tar_y[82]=0.134820;
 tar_x[83]=21.073598;
 tar_y[83]=0.123064;
 tar_x[84]=21.367376;
 tar_y[84]=0.112563;
 tar_x[85]=21.669544;
 tar_y[85]=0.096238;
 tar_x[86]=21.956350;
 tar_y[86]=0.091248;
 tar_x[87]=22.247331;
 tar_y[87]=0.086627;
 tar_x[88]=22.519442;
 tar_y[88]=0.061212;
 tar_x[89]=22.751867;
 tar_y[89]=0.029334;
 tar_x[90]=22.976904;
 tar_y[90]=-0.018035;
 tar_x[91]=23.200309;
 tar_y[91]=-0.092528;
 tar_x[92]=23.414557;
 tar_y[92]=-0.183230;
 tar_x[93]=23.622188;
 tar_y[93]=-0.300217;
 tar_x[94]=23.800468;
 tar_y[94]=-0.431345;
 tar_x[95]=23.961253;
 tar_y[95]=-0.574571;
 tar_x[96]=24.118376;
 tar_y[96]=-0.727459;
 tar_x[97]=24.276019;
 tar_y[97]=-0.920558;
 tar_x[98]=24.423540;
 tar_y[98]=-1.132979;
 tar_x[99]=24.592776;
 tar_y[99]=-1.352609;
 tar_x[100]=24.765100;
 tar_y[100]=-1.598453;
 tar_x[101]=24.940328;
 tar_y[101]=-1.840750;
 tar_x[102]=25.099773;
 tar_y[102]=-2.064485;
 tar_x[103]=25.281294;
 tar_y[103]=-2.321309;

 curv[0]=0.020317;
curv[1]=0.020317;
curv[2]=0.020205;
curv[3]=0.018635;
curv[4]=0.016568;
curv[5]=0.014231;
curv[6]=0.006090;
curv[7]=0.001911;
curv[8]=0.009753;
curv[9]=0.016990;
curv[10]=0.025270;
curv[11]=0.019368;
curv[12]=0.013537;
curv[13]=0.007844;
curv[14]=0.002137;
curv[15]=0.003576;
curv[16]=0.015523;
curv[17]=0.027419;
curv[18]=0.039470;
curv[19]=0.051766;
curv[20]=0.063340;
curv[21]=0.073023;
curv[22]=0.214346;
curv[23]=0.350043;
curv[24]=0.452323;
curv[25]=0.502477;
curv[26]=0.407417;
curv[27]=0.327793;
curv[28]=0.241688;
curv[29]=0.180177;
curv[30]=0.130573;
curv[31]=0.021160;
curv[32]=0.084591;
curv[33]=0.196482;
curv[34]=0.351945;
curv[35]=0.571293;
curv[36]=0.535041;
curv[37]=0.438297;
curv[38]=0.303327;
curv[39]=0.136922;
curv[40]=0.046221;
curv[41]=0.028818;
curv[42]=0.013029;
curv[43]=0.003251;
curv[44]=0.019488;
curv[45]=0.036157;
curv[46]=0.028417;
curv[47]=0.020570;
curv[48]=0.012983;
curv[49]=0.004905;
curv[50]=0.002555;
curv[51]=0.008250;
curv[52]=0.013831;
curv[53]=0.019384;
curv[54]=0.025008;
curv[55]=0.030716;
curv[56]=0.012452;
curv[57]=0.053323;
curv[58]=0.094037;
curv[59]=0.132583;
curv[60]=0.167811;
curv[61]=0.177524;
curv[62]=0.184938;
curv[63]=0.190275;
curv[64]=0.193555;
curv[65]=0.194079;
curv[66]=0.178581;
curv[67]=0.163102;
curv[68]=0.148042;
curv[69]=0.134871;
curv[70]=0.122815;
curv[71]=0.023060;
curv[72]=0.071427;
curv[73]=0.181510;
curv[74]=0.314096;
curv[75]=0.493748;
curv[76]=0.436356;
curv[77]=0.341273;
curv[78]=0.230705;
curv[79]=0.114062;
curv[80]=0.033587;
curv[81]=0.014233;
curv[82]=0.005553;
curv[83]=0.025013;
curv[84]=0.044559;
curv[85]=0.064704;
curv[86]=0.052630;
curv[87]=0.171212;
curv[88]=0.278361;
curv[89]=0.359980;
curv[90]=0.420492;
curv[91]=0.441733;
curv[92]=0.435397;
curv[93]=0.406410;
curv[94]=0.368459;
curv[95]=0.328482;
curv[96]=0.289049;
curv[97]=0.249877;
curv[98]=0.215420;
curv[99]=0.179820;
curv[100]=0.148480;
curv[101]=0.121671;
curv[102]=0.101352;
curv[103]=0.082342;

 tar_theta[0]=0.000000;
 tar_theta[1]=-4.280959;
 tar_theta[2]=-0.539608;
 tar_theta[3]=0.820510;
 tar_theta[4]=-1.226421;
 tar_theta[5]=-1.732047;
 tar_theta[6]=-1.106608;
 tar_theta[7]=0.479959;
 tar_theta[8]=-2.202238;
 tar_theta[9]=0.335146;
 tar_theta[10]=-1.213904;
 tar_theta[11]=4.665716;
 tar_theta[12]=-0.804324;
 tar_theta[13]=-0.589770;
 tar_theta[14]=-0.148080;
 tar_theta[15]=-1.223545;
 tar_theta[16]=-0.448060;
 tar_theta[17]=-0.021688;
 tar_theta[18]=0.723288;
 tar_theta[19]=-0.766161;
 tar_theta[20]=-0.599422;
 tar_theta[21]=-1.113869;
 tar_theta[22]=-0.422735;
 tar_theta[23]=6.051899;
 tar_theta[24]=18.105938;
 tar_theta[25]=16.434083;
 tar_theta[26]=26.525293;
 tar_theta[27]=24.039690;
 tar_theta[28]=30.603881;
 tar_theta[29]=36.686613;
 tar_theta[30]=38.615197;
 tar_theta[31]=37.359768;
 tar_theta[32]=33.411375;
 tar_theta[33]=30.981723;
 tar_theta[34]=19.489453;
 tar_theta[35]=16.766955;
 tar_theta[36]=9.519750;
 tar_theta[37]=6.915650;
 tar_theta[38]=2.074263;
 tar_theta[39]=2.086756;
 tar_theta[40]=3.855876;
 tar_theta[41]=0.853559;
 tar_theta[42]=-2.034214;
 tar_theta[43]=-0.380606;
 tar_theta[44]=-2.045824;
 tar_theta[45]=-1.227498;
 tar_theta[46]=-0.559993;
 tar_theta[47]=-1.144154;
 tar_theta[48]=-2.649129;
 tar_theta[49]=-0.657261;
 tar_theta[50]=-2.268609;
 tar_theta[51]=-2.339469;
 tar_theta[52]=-0.109838;
 tar_theta[53]=-0.571437;
 tar_theta[54]=-0.595285;
 tar_theta[55]=-1.365128;
 tar_theta[56]=-1.413439;
 tar_theta[57]=-2.437760;
 tar_theta[58]=1.062332;
 tar_theta[59]=-5.059469;
 tar_theta[60]=-7.111381;
 tar_theta[61]=-8.840023;
 tar_theta[62]=-13.437054;
 tar_theta[63]=-15.108450;
 tar_theta[64]=-20.330934;
 tar_theta[65]=-20.942350;
 tar_theta[66]=-26.837326;
 tar_theta[67]=-26.115490;
 tar_theta[68]=-29.341652;
 tar_theta[69]=-30.663544;
 tar_theta[70]=-34.496821;
 tar_theta[71]=-33.470694;
 tar_theta[72]=-31.642431;
 tar_theta[73]=-29.587911;
 tar_theta[74]=-24.233423;
 tar_theta[75]=-16.027358;
 tar_theta[76]=-12.056616;
 tar_theta[77]=-5.934355;
 tar_theta[78]=-6.287753;
 tar_theta[79]=-1.847198;
 tar_theta[80]=-1.109983;
 tar_theta[81]=-1.943200;
 tar_theta[82]=-2.296425;
 tar_theta[83]=-2.047148;
 tar_theta[84]=-3.092469;
 tar_theta[85]=-0.996761;
 tar_theta[86]=-0.909824;
 tar_theta[87]=-5.335911;
 tar_theta[88]=-7.809615;
 tar_theta[89]=-11.886900;
 tar_theta[90]=-18.440642;
 tar_theta[91]=-22.945395;
 tar_theta[92]=-29.398522;
 tar_theta[93]=-36.335120;
 tar_theta[94]=-41.694396;
 tar_theta[95]=-44.217343;
 tar_theta[96]=-50.772339;
 tar_theta[97]=-55.221001;
 tar_theta[98]=-52.383934;
 tar_theta[99]=-54.971521;
 tar_theta[100]=-54.125731;
 tar_theta[101]=-54.524385;
 tar_theta[102]=-54.747658;
 tar_theta[103]=-54.747658;

 tar_x[0]=1.514504;
tar_y[0]=0.264576;
tar_x[1]=1.514430;
tar_y[1]=0.264775;
tar_x[2]=1.519873;
tar_y[2]=0.263630;
tar_x[3]=1.515158;
tar_y[3]=0.262878;
tar_x[4]=1.513622;
tar_y[4]=0.264493;
tar_x[5]=1.519043;
tar_y[5]=0.260014;
tar_x[6]=1.521048;
tar_y[6]=0.260994;
tar_x[7]=1.516158;
tar_y[7]=0.261092;
tar_x[8]=1.543582;
tar_y[8]=0.264597;
tar_x[9]=1.682079;
tar_y[9]=0.257292;
tar_x[10]=1.855994;
tar_y[10]=0.247824;
tar_x[11]=2.038327;
tar_y[11]=0.242602;
tar_x[12]=2.222533;
tar_y[12]=0.236447;
tar_x[13]=2.406088;
tar_y[13]=0.228771;
tar_x[14]=2.585693;
tar_y[14]=0.223159;
tar_x[15]=2.755279;
tar_y[15]=0.217889;
tar_x[16]=2.947972;
tar_y[16]=0.217328;
tar_x[17]=3.157699;
tar_y[17]=0.203287;
tar_x[18]=3.347630;
tar_y[18]=0.203901;
tar_x[19]=3.532121;
tar_y[19]=0.198632;
tar_x[20]=3.737868;
tar_y[20]=0.196793;
tar_x[21]=3.934257;
tar_y[21]=0.185659;
tar_x[22]=4.116175;
tar_y[22]=0.182778;
tar_x[23]=4.303565;
tar_y[23]=0.175365;
tar_x[24]=4.492974;
tar_y[24]=0.175929;
tar_x[25]=4.677533;
tar_y[25]=0.169451;
tar_x[26]=4.856980;
tar_y[26]=0.160161;
tar_x[27]=5.014674;
tar_y[27]=0.162057;
tar_x[28]=5.235448;
tar_y[28]=0.148853;
tar_x[29]=5.434052;
tar_y[29]=0.149056;
tar_x[30]=5.637738;
tar_y[30]=0.134057;
tar_x[31]=5.841292;
tar_y[31]=0.134710;
tar_x[32]=6.031700;
tar_y[32]=0.130803;
tar_x[33]=6.195659;
tar_y[33]=0.126766;
tar_x[34]=6.404541;
tar_y[34]=0.115605;
tar_x[35]=6.581043;
tar_y[35]=0.115318;
tar_x[36]=6.771082;
tar_y[36]=0.114351;
tar_x[37]=6.966762;
tar_y[37]=0.106876;
tar_x[38]=7.157989;
tar_y[38]=0.101583;
tar_x[39]=7.349935;
tar_y[39]=0.093624;
tar_x[40]=7.530436;
tar_y[40]=0.101001;
tar_x[41]=7.718670;
tar_y[41]=0.099487;
tar_x[42]=7.901657;
tar_y[42]=0.101072;
tar_x[43]=8.082850;
tar_y[43]=0.097990;
tar_x[44]=8.262463;
tar_y[44]=0.109064;
tar_x[45]=8.434467;
tar_y[45]=0.106935;
tar_x[46]=8.642845;
tar_y[46]=0.117515;
tar_x[47]=8.831876;
tar_y[47]=0.129677;
tar_x[48]=9.026163;
tar_y[48]=0.133106;
tar_x[49]=9.217196;
tar_y[49]=0.144891;
tar_x[50]=9.400128;
tar_y[50]=0.161906;
tar_x[51]=9.596044;
tar_y[51]=0.160193;
tar_x[52]=9.802412;
tar_y[52]=0.162218;
tar_x[53]=9.989983;
tar_y[53]=0.167045;
tar_x[54]=10.192135;
tar_y[54]=0.167554;
tar_x[55]=10.364199;
tar_y[55]=0.184216;
tar_x[56]=10.548672;
tar_y[56]=0.185994;
tar_x[57]=10.735291;
tar_y[57]=0.194183;
tar_x[58]=10.934628;
tar_y[58]=0.198095;
tar_x[59]=11.115995;
tar_y[59]=0.203927;
tar_x[60]=11.316838;
tar_y[60]=0.206537;
tar_x[61]=11.502296;
tar_y[61]=0.215081;
tar_x[62]=11.687510;
tar_y[62]=0.221165;
tar_x[63]=11.883769;
tar_y[63]=0.222203;
tar_x[64]=12.069487;
tar_y[64]=0.232144;
tar_x[65]=12.258124;
tar_y[65]=0.237336;
tar_x[66]=12.433264;
tar_y[66]=0.246976;
tar_x[67]=12.626397;
tar_y[67]=0.249168;
tar_x[68]=12.816327;
tar_y[68]=0.252616;
tar_x[69]=13.008612;
tar_y[69]=0.252982;
tar_x[70]=13.205576;
tar_y[70]=0.268582;
tar_x[71]=13.391171;
tar_y[71]=0.275360;
tar_x[72]=13.605262;
tar_y[72]=0.271206;
tar_x[73]=13.805468;
tar_y[73]=0.274948;
tar_x[74]=13.992331;
tar_y[74]=0.278894;
tar_x[75]=14.178011;
tar_y[75]=0.286050;
tar_x[76]=14.382462;
tar_y[76]=0.296689;
tar_x[77]=14.579257;
tar_y[77]=0.298496;
tar_x[78]=14.776028;
tar_y[78]=0.305666;
tar_x[79]=14.982461;
tar_y[79]=0.307410;
tar_x[80]=15.177597;
tar_y[80]=0.315098;
tar_x[81]=15.380354;
tar_y[81]=0.319099;
tar_x[82]=15.582549;
tar_y[82]=0.324572;
tar_x[83]=15.768613;
tar_y[83]=0.331786;
tar_x[84]=15.971441;
tar_y[84]=0.334899;
tar_x[85]=16.173442;
tar_y[85]=0.343062;
tar_x[86]=16.361351;
tar_y[86]=0.354636;
tar_x[87]=16.557514;
tar_y[87]=0.355489;
tar_x[88]=16.755223;
tar_y[88]=0.365497;
tar_x[89]=16.944497;
tar_y[89]=0.365199;
tar_x[90]=17.131623;
tar_y[90]=0.380298;
tar_x[91]=17.328882;
tar_y[91]=0.387751;
tar_x[92]=17.521505;
tar_y[92]=0.393613;
tar_x[93]=17.722590;
tar_y[93]=0.404228;
tar_x[94]=17.917453;
tar_y[94]=0.407768;
tar_x[95]=18.118608;
tar_y[95]=0.416915;
tar_x[96]=18.299420;
tar_y[96]=0.418445;
tar_x[97]=18.492322;
tar_y[97]=0.423750;
tar_x[98]=18.682231;
tar_y[98]=0.426681;
tar_x[99]=18.861517;
tar_y[99]=0.442752;
tar_x[100]=19.072624;
tar_y[100]=0.452909;
tar_x[101]=19.273405;
tar_y[101]=0.464841;
tar_x[102]=19.471014;
tar_y[102]=0.467811;
tar_x[103]=19.655191;
tar_y[103]=0.471367;
tar_x[104]=19.847621;
tar_y[104]=0.482670;
tar_x[105]=20.027085;
tar_y[105]=0.488482;
tar_x[106]=20.219769;
tar_y[106]=0.488284;
tar_x[107]=20.415580;
tar_y[107]=0.496305;
tar_x[108]=20.616914;
tar_y[108]=0.502038;
tar_x[109]=20.810798;
tar_y[109]=0.509105;
tar_x[110]=21.010485;
tar_y[110]=0.513942;
tar_x[111]=21.168910;
tar_y[111]=0.515260;
tar_x[112]=21.369883;
tar_y[112]=0.502029;
tar_x[113]=21.537268;
tar_y[113]=0.483519;
tar_x[114]=21.693367;
tar_y[114]=0.458546;
tar_x[115]=21.842951;
tar_y[115]=0.424981;
tar_x[116]=21.987770;
tar_y[116]=0.383344;
tar_x[117]=22.122900;
tar_y[117]=0.328040;
tar_x[118]=22.274718;
tar_y[118]=0.267346;
tar_x[119]=22.409817;
tar_y[119]=0.203453;
tar_x[120]=22.544695;
tar_y[120]=0.136322;
tar_x[121]=22.682340;
tar_y[121]=0.043977;
tar_x[122]=22.774201;
tar_y[122]=-0.013006;
tar_x[123]=22.923423;
tar_y[123]=-0.128350;
tar_x[124]=23.055203;
tar_y[124]=-0.242910;
tar_x[125]=23.170838;
tar_y[125]=-0.349218;
tar_x[126]=23.272300;
tar_y[126]=-0.458986;
tar_x[127]=23.382499;
tar_y[127]=-0.576641;
tar_x[128]=23.494976;
tar_y[128]=-0.710823;
tar_x[129]=23.611216;
tar_y[129]=-0.853020;
tar_x[130]=23.746881;
tar_y[130]=-0.999582;
tar_x[131]=23.867046;
tar_y[131]=-1.139078;
tar_x[132]=23.988454;
tar_y[132]=-1.288396;
tar_x[133]=24.114584;
tar_y[133]=-1.423511;
tar_x[134]=24.229443;
tar_y[134]=-1.570410;
tar_x[135]=24.347448;
tar_y[135]=-1.695665;
tar_x[136]=24.483484;
tar_y[136]=-1.852396;
tar_x[137]=24.604066;
tar_y[137]=-1.994384;
tar_x[138]=24.729354;
tar_y[138]=-2.144452;
tar_x[139]=24.868816;
tar_y[139]=-2.289922;
tar_x[140]=24.991509;
tar_y[140]=-2.426903;
tar_x[141]=25.123092;
tar_y[141]=-2.568762;
tar_x[142]=25.254298;
tar_y[142]=-2.721767;
tar_x[143]=25.370507;
tar_y[143]=-2.867581;
tar_x[144]=25.496366;
tar_y[144]=-3.004401;
tar_x[145]=25.609809;
tar_y[145]=-3.142119;
tar_x[146]=25.731113;
tar_y[146]=-3.274655;
tar_x[147]=25.841116;
tar_y[147]=-3.404216;
tar_x[148]=25.975446;
tar_y[148]=-3.555366;
tar_x[149]=26.086960;
tar_y[149]=-3.694130;
tar_x[150]=26.209795;
tar_y[150]=-3.835480;
tar_x[151]=26.336044;
tar_y[151]=-3.981047;
tar_x[152]=26.463004;
tar_y[152]=-4.125176;
tar_x[153]=26.594439;
tar_y[153]=-4.266371;
tar_x[154]=26.708215;
tar_y[154]=-4.414293;
tar_x[155]=26.832585;
tar_y[155]=-4.551638;
tar_x[156]=26.954359;
tar_y[156]=-4.695685;
tar_x[157]=27.083498;
tar_y[157]=-4.835981;
tar_x[158]=27.203514;
tar_y[158]=-4.977872;
tar_x[159]=27.313977;
tar_y[159]=-5.096865;
tar_x[160]=27.438979;
tar_y[160]=-5.216124;
tar_x[161]=27.563659;
tar_y[161]=-5.334958;
tar_x[162]=27.685633;
tar_y[162]=-5.437108;
tar_x[163]=27.806843;
tar_y[163]=-5.539297;
tar_x[164]=27.937054;
tar_y[164]=-5.633583;
tar_x[165]=28.046589;
tar_y[165]=-5.714785;
tar_x[166]=28.191658;
tar_y[166]=-5.808527;
tar_x[167]=28.324151;
tar_y[167]=-5.883068;
tar_x[168]=28.462228;
tar_y[168]=-5.955803;
tar_x[169]=28.598573;
tar_y[169]=-6.025841;
tar_x[170]=28.744318;
tar_y[170]=-6.088400;
tar_x[171]=28.887565;
tar_y[171]=-6.148893;
tar_x[172]=29.038252;
tar_y[172]=-6.194138;
tar_x[173]=29.186891;
tar_y[173]=-6.230660;
tar_x[174]=29.340313;
tar_y[174]=-6.265056;
tar_x[175]=29.483056;
tar_y[175]=-6.290158;
tar_x[176]=29.636827;
tar_y[176]=-6.305574;
tar_x[177]=29.799260;
tar_y[177]=-6.315372;
tar_x[178]=29.955185;
tar_y[178]=-6.309039;
tar_x[179]=30.111927;
tar_y[179]=-6.297833;
tar_x[180]=30.256753;
tar_y[180]=-6.284759;
tar_x[181]=30.400521;
tar_y[181]=-6.258657;
tar_x[182]=30.559019;
tar_y[182]=-6.224103;
tar_x[183]=30.697602;
tar_y[183]=-6.185121;
tar_x[184]=30.831882;
tar_y[184]=-6.136053;
tar_x[185]=30.971827;
tar_y[185]=-6.078119;
tar_x[186]=31.106901;
tar_y[186]=-6.013327;
tar_x[187]=31.240658;
tar_y[187]=-5.935545;
tar_x[188]=31.361300;
tar_y[188]=-5.847160;
tar_x[189]=31.489571;
tar_y[189]=-5.756265;
tar_x[190]=31.590946;
tar_y[190]=-5.655071;
tar_x[191]=31.694139;
tar_y[191]=-5.558037;
tar_x[192]=31.803196;
tar_y[192]=-5.444618;
tar_x[193]=31.887020;
tar_y[193]=-5.334585;
tar_x[194]=31.981022;
tar_y[194]=-5.206120;
tar_x[195]=32.047463;
tar_y[195]=-5.088115;
tar_x[196]=32.126706;
tar_y[196]=-4.954826;
tar_x[197]=32.206655;
tar_y[197]=-4.815053;
tar_x[198]=32.266154;
tar_y[198]=-4.673152;
tar_x[199]=32.326220;
tar_y[199]=-4.529251;
tar_x[200]=32.376997;
tar_y[200]=-4.390600;
tar_x[201]=32.420691;
tar_y[201]=-4.251997;
tar_x[202]=32.466902;
tar_y[202]=-4.106548;
tar_x[203]=32.495554;
tar_y[203]=-3.958944;
tar_x[204]=32.514935;
tar_y[204]=-3.812876;
tar_x[205]=32.529891;
tar_y[205]=-3.671096;
tar_x[206]=32.542019;
tar_y[206]=-3.523853;
tar_x[207]=32.542613;
tar_y[207]=-3.383166;
tar_x[208]=32.548242;
tar_y[208]=-3.224953;
tar_x[209]=32.537867;
tar_y[209]=-3.082688;
tar_x[210]=32.514134;
tar_y[210]=-2.921851;
tar_x[211]=32.499573;
tar_y[211]=-2.774304;
tar_x[212]=32.474890;
tar_y[212]=-2.629856;
tar_x[213]=32.432360;
tar_y[213]=-2.500972;
tar_x[214]=32.396223;
tar_y[214]=-2.344810;
tar_x[215]=32.363983;
tar_y[215]=-2.197365;
tar_x[216]=32.312491;
tar_y[216]=-2.045359;
tar_x[217]=32.250281;
tar_y[217]=-1.901302;
tar_x[218]=32.179612;
tar_y[218]=-1.769625;
tar_x[219]=32.104460;
tar_y[219]=-1.625264;
tar_x[220]=32.025324;
tar_y[220]=-1.501244;
tar_x[221]=31.941353;
tar_y[221]=-1.373948;
tar_x[222]=31.859880;
tar_y[222]=-1.239039;
tar_x[223]=31.772997;
tar_y[223]=-1.115892;
tar_x[224]=31.668018;
tar_y[224]=-0.999683;
tar_x[225]=31.561830;
tar_y[225]=-0.890337;
tar_x[226]=31.451570;
tar_y[226]=-0.795558;
tar_x[227]=31.346891;
tar_y[227]=-0.696201;
tar_x[228]=31.235346;
tar_y[228]=-0.602468;
tar_x[229]=31.113678;
tar_y[229]=-0.511827;
tar_x[230]=30.989983;
tar_y[230]=-0.423196;
tar_x[231]=30.853482;
tar_y[231]=-0.342166;
tar_x[232]=30.713222;
tar_y[232]=-0.274555;
tar_x[233]=30.587552;
tar_y[233]=-0.207181;
tar_x[234]=30.449339;
tar_y[234]=-0.149196;
tar_x[235]=30.308731;
tar_y[235]=-0.102686;
tar_x[236]=30.153715;
tar_y[236]=-0.068122;
tar_x[237]=30.012509;
tar_y[237]=-0.033011;
tar_x[238]=29.839820;
tar_y[238]=0.000962;
tar_x[239]=29.675824;
tar_y[239]=0.020538;
tar_x[240]=29.502804;
tar_y[240]=0.032836;
tar_x[241]=29.333494;
tar_y[241]=0.045831;
tar_x[242]=29.137638;
tar_y[242]=0.056272;
tar_x[243]=28.934864;
tar_y[243]=0.061917;
tar_x[244]=28.728532;
tar_y[244]=0.072153;
tar_x[245]=28.541900;
tar_y[245]=0.090456;
tar_x[246]=28.346086;
tar_y[246]=0.089585;
tar_x[247]=28.146196;
tar_y[247]=0.105084;
tar_x[248]=27.940689;
tar_y[248]=0.115689;
tar_x[249]=27.741944;
tar_y[249]=0.126796;
tar_x[250]=27.535759;
tar_y[250]=0.134523;
tar_x[251]=27.342912;
tar_y[251]=0.154287;
tar_x[252]=27.141653;
tar_y[252]=0.157695;
tar_x[253]=26.945335;
tar_y[253]=0.169332;
tar_x[254]=26.760184;
tar_y[254]=0.187457;
tar_x[255]=26.564756;
tar_y[255]=0.188393;
tar_x[256]=26.364537;
tar_y[256]=0.196442;
tar_x[257]=26.170052;
tar_y[257]=0.207508;
tar_x[258]=25.977645;
tar_y[258]=0.218046;
tar_x[259]=25.778785;
tar_y[259]=0.227876;
tar_x[260]=25.582574;
tar_y[260]=0.242035;
tar_x[261]=25.391380;
tar_y[261]=0.253278;
tar_x[262]=25.197670;
tar_y[262]=0.257604;
tar_x[263]=25.007822;
tar_y[263]=0.265377;
tar_x[264]=24.816967;
tar_y[264]=0.273109;
tar_x[265]=24.620580;
tar_y[265]=0.282513;
tar_x[266]=24.433423;
tar_y[266]=0.289735;
tar_x[267]=24.241387;
tar_y[267]=0.297504;
tar_x[268]=24.022273;
tar_y[268]=0.309765;
tar_x[269]=23.820516;
tar_y[269]=0.322763;
tar_x[270]=23.622168;
tar_y[270]=0.328465;
tar_x[271]=23.432401;
tar_y[271]=0.340590;
tar_x[272]=23.238764;
tar_y[272]=0.345485;
tar_x[273]=23.048709;
tar_y[273]=0.354215;
tar_x[274]=22.854309;
tar_y[274]=0.368235;
tar_x[275]=22.640800;
tar_y[275]=0.376342;
tar_x[276]=22.447964;
tar_y[276]=0.386889;
tar_x[277]=22.258414;
tar_y[277]=0.398602;
tar_x[278]=22.051823;
tar_y[278]=0.383929;
tar_x[279]=21.865564;
tar_y[279]=0.404272;
tar_x[280]=21.678317;
tar_y[280]=0.402650;
tar_x[281]=21.484444;
tar_y[281]=0.413452;
tar_x[282]=21.298771;
tar_y[282]=0.418881;
tar_x[283]=21.112871;
tar_y[283]=0.426520;
tar_x[284]=20.916419;
tar_y[284]=0.434577;
tar_x[285]=20.737888;
tar_y[285]=0.447232;
tar_x[286]=20.538962;
tar_y[286]=0.458281;
tar_x[287]=20.343954;
tar_y[287]=0.469019;
tar_x[288]=20.149439;
tar_y[288]=0.472183;
tar_x[289]=19.960500;
tar_y[289]=0.484717;
tar_x[290]=19.779863;
tar_y[290]=0.492983;
tar_x[291]=19.584973;
tar_y[291]=0.503384;
tar_x[292]=19.395367;
tar_y[292]=0.506377;
tar_x[293]=19.199706;
tar_y[293]=0.513723;
tar_x[294]=19.007505;
tar_y[294]=0.521720;
tar_x[295]=18.814387;
tar_y[295]=0.530261;
tar_x[296]=18.623572;
tar_y[296]=0.532739;
tar_x[297]=18.446540;
tar_y[297]=0.537651;
tar_x[298]=18.244023;
tar_y[298]=0.543510;
tar_x[299]=18.049552;
tar_y[299]=0.547754;
tar_x[300]=17.857287;
tar_y[300]=0.557401;
tar_x[301]=17.672556;
tar_y[301]=0.564206;
tar_x[302]=17.479657;
tar_y[302]=0.571593;
tar_x[303]=17.288898;
tar_y[303]=0.582685;
tar_x[304]=17.105662;
tar_y[304]=0.585981;
tar_x[305]=16.911142;
tar_y[305]=0.598026;
tar_x[306]=16.721719;
tar_y[306]=0.607208;
tar_x[307]=16.523389;
tar_y[307]=0.612155;
tar_x[308]=16.333410;
tar_y[308]=0.614464;
tar_x[309]=16.138021;
tar_y[309]=0.622723;
tar_x[310]=15.938411;
tar_y[310]=0.626731;
tar_x[311]=15.741930;
tar_y[311]=0.634701;
tar_x[312]=15.545149;
tar_y[312]=0.636967;
tar_x[313]=15.363502;
tar_y[313]=0.645540;
tar_x[314]=15.177113;
tar_y[314]=0.649719;
tar_x[315]=14.994149;
tar_y[315]=0.656934;
tar_x[316]=14.792536;
tar_y[316]=0.662077;
tar_x[317]=14.609364;
tar_y[317]=0.671478;
tar_x[318]=14.419328;
tar_y[318]=0.679770;
tar_x[319]=14.234928;
tar_y[319]=0.687170;
tar_x[320]=14.046928;
tar_y[320]=0.692691;
tar_x[321]=13.864305;
tar_y[321]=0.696547;
tar_x[322]=13.670108;
tar_y[322]=0.701934;
tar_x[323]=13.482677;
tar_y[323]=0.710689;
tar_x[324]=13.298299;
tar_y[324]=0.712248;
tar_x[325]=13.117951;
tar_y[325]=0.714563;
tar_x[326]=12.921780;
tar_y[326]=0.717230;
tar_x[327]=12.746644;
tar_y[327]=0.727086;
tar_x[328]=12.535554;
tar_y[328]=0.733204;
tar_x[329]=12.346069;
tar_y[329]=0.733008;
tar_x[330]=12.153355;
tar_y[330]=0.737275;
tar_x[331]=11.952196;
tar_y[331]=0.745521;
tar_x[332]=11.761977;
tar_y[332]=0.754611;
tar_x[333]=11.569024;
tar_y[333]=0.767526;
tar_x[334]=11.369023;
tar_y[334]=0.770884;
tar_x[335]=11.187370;
tar_y[335]=0.783629;
tar_x[336]=10.991574;
tar_y[336]=0.789906;
tar_x[337]=10.785441;
tar_y[337]=0.799218;
tar_x[338]=10.583989;
tar_y[338]=0.801311;
tar_x[339]=10.392205;
tar_y[339]=0.804862;
tar_x[340]=10.204778;
tar_y[340]=0.807938;
tar_x[341]=10.015794;
tar_y[341]=0.809788;
tar_x[342]=9.807032;
tar_y[342]=0.816709;
tar_x[343]=9.617997;
tar_y[343]=0.823823;
tar_x[344]=9.431588;
tar_y[344]=0.827614;
tar_x[345]=9.240032;
tar_y[345]=0.835106;
tar_x[346]=9.039867;
tar_y[346]=0.837676;
tar_x[347]=8.841843;
tar_y[347]=0.844206;
tar_x[348]=8.659907;
tar_y[348]=0.847990;
tar_x[349]=8.485035;
tar_y[349]=0.849820;
tar_x[350]=8.304968;
tar_y[350]=0.841312;
tar_x[351]=8.131903;
tar_y[351]=0.834871;
tar_x[352]=7.931299;
tar_y[352]=0.831222;
tar_x[353]=7.734951;
tar_y[353]=0.830223;
tar_x[354]=7.535314;
tar_y[354]=0.825706;
tar_x[355]=7.332626;
tar_y[355]=0.815810;
tar_x[356]=7.142068;
tar_y[356]=0.812419;
tar_x[357]=6.957706;
tar_y[357]=0.807950;
tar_x[358]=6.769394;
tar_y[358]=0.805533;
tar_x[359]=6.583951;
tar_y[359]=0.805072;
tar_x[360]=6.393180;
tar_y[360]=0.799447;
tar_x[361]=6.203554;
tar_y[361]=0.797226;
tar_x[362]=6.010835;
tar_y[362]=0.792676;
tar_x[363]=5.819168;
tar_y[363]=0.780263;
tar_x[364]=5.603734;
tar_y[364]=0.778588;
tar_x[365]=5.411248;
tar_y[365]=0.763736;
tar_x[366]=5.205527;
tar_y[366]=0.761462;
tar_x[367]=5.015865;
tar_y[367]=0.759743;
tar_x[368]=4.832808;
tar_y[368]=0.751773;
tar_x[369]=4.668887;
tar_y[369]=0.741493;
tar_x[370]=4.455051;
tar_y[370]=0.727210;
tar_x[371]=4.257278;
tar_y[371]=0.717926;
tar_x[372]=4.067909;
tar_y[372]=0.711768;
tar_x[373]=3.873313;
tar_y[373]=0.700530;
tar_x[374]=3.683337;
tar_y[374]=0.688909;
tar_x[375]=3.497914;
tar_y[375]=0.686853;
tar_x[376]=3.304069;
tar_y[376]=0.678679;
tar_x[377]=3.105911;
tar_y[377]=0.670746;
tar_x[378]=2.919281;
tar_y[378]=0.655064;
tar_x[379]=2.726748;
tar_y[379]=0.646284;
tar_x[380]=2.530346;
tar_y[380]=0.643375;
tar_x[381]=2.353979;
tar_y[381]=0.627558;
tar_x[382]=2.142490;
tar_y[382]=0.614542;
tar_x[383]=1.958992;
tar_y[383]=0.608236;
tar_x[384]=1.831619;
tar_y[384]=0.612326;
tar_x[385]=1.768662;
tar_y[385]=0.601678;
tar_x[386]=1.755011;
tar_y[386]=0.596681;
tar_x[387]=1.753530;
tar_y[387]=0.599925;
tar_x[388]=1.756516;
tar_y[388]=0.603635;
tar_x[389]=1.753525;
tar_y[389]=0.600038;

tar_x[0]=0.467599;
tar_y[0]=-0.127343;
tar_theta[0]=0.373565;
tar_x[1]=0.467599;
tar_y[1]=-0.127343;
tar_theta[1]=0.373565;
tar_x[2]=0.460653;
tar_y[2]=-0.120126;
tar_theta[2]=0.373320;
tar_x[3]=0.557228;
tar_y[3]=-0.118559;
tar_theta[3]=0.369036;
tar_x[4]=0.888616;
tar_y[4]=-0.105182;
tar_theta[4]=0.433073;
tar_x[5]=1.243285;
tar_y[5]=-0.091219;
tar_theta[5]=0.523537;
tar_x[6]=1.622752;
tar_y[6]=-0.071503;
tar_theta[6]=0.474852;
tar_x[7]=2.019890;
tar_y[7]=-0.051855;
tar_theta[7]=0.505607;
tar_x[8]=2.415151;
tar_y[8]=-0.036046;
tar_theta[8]=0.614084;
tar_x[9]=2.787631;
tar_y[9]=-0.012353;
tar_theta[9]=0.497250;
tar_x[10]=3.173653;
tar_y[10]=-0.003374;
tar_theta[10]=0.442675;
tar_x[11]=3.551939;
tar_y[11]=0.014922;
tar_theta[11]=0.297695;
tar_x[12]=3.947259;
tar_y[12]=0.034609;
tar_theta[12]=0.253451;
tar_x[13]=4.324023;
tar_y[13]=0.049007;
tar_theta[13]=0.368933;
tar_x[14]=4.705681;
tar_y[14]=0.061927;
tar_theta[14]=0.610943;
tar_x[15]=5.060834;
tar_y[15]=0.082673;
tar_theta[15]=0.635554;
tar_x[16]=5.443095;
tar_y[16]=0.095071;
tar_theta[16]=0.753072;
tar_x[17]=5.839008;
tar_y[17]=0.114598;
tar_theta[17]=0.760428;
tar_x[18]=6.217552;
tar_y[18]=0.136515;
tar_theta[18]=0.708090;
tar_x[19]=6.571385;
tar_y[19]=0.152667;
tar_theta[19]=0.697572;
tar_x[20]=6.920916;
tar_y[20]=0.163638;
tar_theta[20]=0.905282;
tar_x[21]=7.343741;
tar_y[21]=0.198405;
tar_theta[21]=0.882453;
tar_x[22]=7.750718;
tar_y[22]=0.208969;
tar_theta[22]=1.046216;
tar_x[23]=8.129870;
tar_y[23]=0.234330;
tar_theta[23]=1.111568;
tar_x[24]=8.503308;
tar_y[24]=0.251239;
tar_theta[24]=1.032704;
tar_x[25]=8.901594;
tar_y[25]=0.270135;
tar_theta[25]=1.091944;
tar_x[26]=9.305528;
tar_y[26]=0.291884;
tar_theta[26]=1.051865;
tar_x[27]=9.701313;
tar_y[27]=0.309871;
tar_theta[27]=1.187812;
tar_x[28]=10.087649;
tar_y[28]=0.330900;
tar_theta[28]=1.206097;
tar_x[29]=10.449001;
tar_y[29]=0.356287;
tar_theta[29]=1.270956;
tar_x[30]=10.850435;
tar_y[30]=0.380134;
tar_theta[30]=1.221389;
tar_x[31]=11.233050;
tar_y[31]=0.384305;
tar_theta[31]=1.300161;
tar_x[32]=11.606459;
tar_y[32]=0.414041;
tar_theta[32]=1.256115;
tar_x[33]=11.987903;
tar_y[33]=0.435074;
tar_theta[33]=1.346822;
tar_x[34]=12.375268;
tar_y[34]=0.455725;
tar_theta[34]=1.434742;
tar_x[35]=12.754737;
tar_y[35]=0.475597;
tar_theta[35]=1.546672;
tar_x[36]=13.138693;
tar_y[36]=0.499308;
tar_theta[36]=1.579427;
tar_x[37]=13.521827;
tar_y[37]=0.521106;
tar_theta[37]=1.462358;
tar_x[38]=13.917022;
tar_y[38]=0.543046;
tar_theta[38]=1.498253;
tar_x[39]=14.305671;
tar_y[39]=0.564326;
tar_theta[39]=1.427547;
tar_x[40]=14.710992;
tar_y[40]=0.586250;
tar_theta[40]=1.462421;
tar_x[41]=15.101191;
tar_y[41]=0.609073;
tar_theta[41]=1.519048;
tar_x[42]=15.481576;
tar_y[42]=0.632313;
tar_theta[42]=1.500457;
tar_x[43]=15.867156;
tar_y[43]=0.652028;
tar_theta[43]=1.476351;
tar_x[44]=16.259007;
tar_y[44]=0.681321;
tar_theta[44]=1.460985;
tar_x[45]=16.653236;
tar_y[45]=0.707133;
tar_theta[45]=1.499727;
tar_x[46]=17.027942;
tar_y[46]=0.738269;
tar_theta[46]=1.471417;
tar_x[47]=17.414109;
tar_y[47]=0.757001;
tar_theta[47]=1.530370;
tar_x[48]=17.800951;
tar_y[48]=0.784876;
tar_theta[48]=1.606717;
tar_x[49]=18.198476;
tar_y[49]=0.817440;
tar_theta[49]=1.684201;
tar_x[50]=18.588735;
tar_y[50]=0.833770;
tar_theta[50]=1.652072;
tar_x[51]=18.968867;
tar_y[51]=0.861130;
tar_theta[51]=1.578138;
tar_x[52]=19.360265;
tar_y[52]=0.889277;
tar_theta[52]=1.503568;
tar_x[53]=19.733666;
tar_y[53]=0.906913;
tar_theta[53]=1.457513;
tar_x[54]=20.138444;
tar_y[54]=0.930026;
tar_theta[54]=1.525675;
tar_x[55]=20.520484;
tar_y[55]=0.953039;
tar_theta[55]=-0.828051;
tar_x[56]=20.878424;
tar_y[56]=0.949947;
tar_theta[56]=-3.885523;
tar_x[57]=21.221165;
tar_y[57]=0.926027;
tar_theta[57]=-7.413147;
tar_x[58]=21.569178;
tar_y[58]=0.881252;
tar_theta[58]=-11.627889;
tar_x[59]=21.881455;
tar_y[59]=0.822999;
tar_theta[59]=-17.141836;
tar_x[60]=22.190295;
tar_y[60]=0.707271;
tar_theta[60]=-22.849101;
tar_x[61]=22.477651;
tar_y[61]=0.579405;
tar_theta[61]=-29.959041;
tar_x[62]=22.730105;
tar_y[62]=0.426070;
tar_theta[62]=-37.127680;
tar_x[63]=22.974596;
tar_y[63]=0.233180;
tar_theta[63]=-42.718084;
tar_x[64]=23.223873;
tar_y[64]=0.003747;
tar_theta[64]=-45.109307;
tar_x[65]=23.462494;
tar_y[65]=-0.243420;
tar_theta[65]=-49.297889;
tar_x[66]=23.695132;
tar_y[66]=-0.503149;
tar_theta[66]=-53.359203;
tar_x[67]=23.903646;
tar_y[67]=-0.781022;
tar_theta[67]=-55.652827;
tar_x[68]=24.121833;
tar_y[68]=-1.084701;
tar_theta[68]=-55.583459;
tar_x[69]=24.346821;
tar_y[69]=-1.386072;
tar_theta[69]=-55.715089;
tar_x[70]=24.572245;
tar_y[70]=-1.692260;
tar_theta[70]=-55.675307;
tar_x[71]=24.799042;
tar_y[71]=-2.003447;
tar_theta[71]=-55.561376;
tar_x[72]=25.020025;
tar_y[72]=-2.297933;
tar_theta[72]=-55.663324;
tar_x[73]=25.255619;
tar_y[73]=-2.612488;
tar_theta[73]=-55.689483;
tar_x[74]=25.475853;
tar_y[74]=-2.908583;
tar_theta[74]=-55.704419;
tar_x[75]=25.692931;
tar_y[75]=-3.211825;
tar_theta[75]=-55.738524;
tar_x[76]=25.909002;
tar_y[76]=-3.512675;
tar_theta[76]=-55.722761;
tar_x[77]=26.119913;
tar_y[77]=-3.798697;
tar_theta[77]=-55.728296;
tar_x[78]=26.116909;
tar_y[78]=-4.590374;
tar_theta[78]=-57.759403;
tar_x[79]=26.316418;
tar_y[79]=-4.904728;
tar_theta[79]=-54.830465;
tar_x[80]=26.527371;
tar_y[80]=-5.164611;
tar_theta[80]=-51.707550;
tar_x[81]=26.754366;
tar_y[81]=-5.426570;
tar_theta[81]=-48.607364;
tar_x[82]=26.990967;
tar_y[82]=-5.660012;
tar_theta[82]=-44.807828;
tar_x[83]=27.249454;
tar_y[83]=-5.877760;
tar_theta[83]=-41.122614;
tar_x[84]=27.508740;
tar_y[84]=-6.076026;
tar_theta[84]=-37.484454;
tar_x[85]=27.777347;
tar_y[85]=-6.261211;
tar_theta[85]=-33.753469;
tar_x[86]=28.074207;
tar_y[86]=-6.433552;
tar_theta[86]=-29.661530;
tar_x[87]=28.356888;
tar_y[87]=-6.567955;
tar_theta[87]=-25.226093;
tar_x[88]=28.652468;
tar_y[88]=-6.684824;
tar_theta[88]=-20.729367;
tar_x[89]=28.934472;
tar_y[89]=-6.767837;
tar_theta[89]=-16.585175;
tar_x[90]=29.281946;
tar_y[90]=-6.839517;
tar_theta[90]=-11.488645;
tar_x[91]=29.586553;
tar_y[91]=-6.877527;
tar_theta[91]=-6.071370;
tar_x[92]=29.892544;
tar_y[92]=-6.881973;
tar_theta[92]=-0.993586;
tar_x[93]=30.201493;
tar_y[93]=-6.864597;
tar_theta[93]=4.167203;
tar_x[94]=30.513469;
tar_y[94]=-6.812908;
tar_theta[94]=9.698648;
tar_x[95]=30.819360;
tar_y[95]=-6.734509;
tar_theta[95]=15.606312;
tar_x[96]=31.125302;
tar_y[96]=-6.619929;
tar_theta[96]=21.914733;
tar_x[97]=31.397620;
tar_y[97]=-6.447510;
tar_theta[97]=29.013653;
tar_x[98]=31.624017;
tar_y[98]=-6.291971;
tar_theta[98]=35.306634;
tar_x[99]=31.856036;
tar_y[99]=-6.099486;
tar_theta[99]=41.603455;
tar_x[100]=32.078810;
tar_y[100]=-5.873640;
tar_theta[100]=48.869502;
tar_x[101]=32.243021;
tar_y[101]=-5.650415;
tar_theta[101]=55.732683;
tar_x[102]=32.371448;
tar_y[102]=-5.408265;
tar_theta[102]=63.003316;
tar_x[103]=32.481305;
tar_y[103]=-5.159607;
tar_theta[103]=70.716196;
tar_x[104]=32.535851;
tar_y[104]=-4.897485;
tar_theta[104]=77.459472;
tar_x[105]=32.569629;
tar_y[105]=-4.633045;
tar_theta[105]=84.128774;
tar_x[106]=32.588746;
tar_y[106]=-4.354694;
tar_theta[106]=90.902979;
tar_x[107]=32.551356;
tar_y[107]=-4.067748;
tar_theta[107]=96.099652;
tar_x[108]=32.506473;
tar_y[108]=-3.752225;
tar_theta[108]=97.145405;
tar_x[109]=32.441368;
tar_y[109]=-3.428316;
tar_theta[109]=97.412850;
tar_x[110]=32.375383;
tar_y[110]=-3.102862;
tar_theta[110]=101.222812;
tar_x[111]=32.291369;
tar_y[111]=-2.787878;
tar_theta[111]=105.687693;
tar_x[112]=32.189273;
tar_y[112]=-2.501753;
tar_theta[112]=110.180775;
tar_x[113]=32.084808;
tar_y[113]=-2.247916;
tar_theta[113]=114.263145;
tar_x[114]=31.925287;
tar_y[114]=-1.943700;
tar_theta[114]=119.449393;
tar_x[115]=31.746608;
tar_y[115]=-1.692825;
tar_theta[115]=124.884754;
tar_x[116]=31.562577;
tar_y[116]=-1.471052;
tar_theta[116]=131.136817;
tar_x[117]=31.367656;
tar_y[117]=-1.279046;
tar_theta[117]=136.576786;
tar_x[118]=31.134141;
tar_y[118]=-1.087239;
tar_theta[118]=142.415219;
tar_x[119]=30.893936;
tar_y[119]=-0.939504;
tar_theta[119]=148.724554;
tar_x[120]=30.644854;
tar_y[120]=-0.815571;
tar_theta[120]=155.478332;
tar_x[121]=30.368392;
tar_y[121]=-0.721698;
tar_theta[121]=162.343417;
tar_x[122]=30.098385;
tar_y[122]=-0.651282;
tar_theta[122]=169.445179;
tar_x[123]=29.777747;
tar_y[123]=-0.612784;
tar_theta[123]=175.292563;
tar_x[124]=29.416449;
tar_y[124]=-0.604830;
tar_theta[124]=176.755495;
tar_x[125]=29.019892;
tar_y[125]=-0.600346;
tar_theta[125]=174.101182;
tar_x[126]=28.635165;
tar_y[126]=-0.559432;
tar_theta[126]=172.948519;
tar_x[127]=28.252071;
tar_y[127]=-0.525051;
tar_theta[127]=172.932433;
tar_x[128]=27.855809;
tar_y[128]=-0.496297;
tar_theta[128]=172.967320;
tar_x[129]=27.448700;
tar_y[129]=-0.447532;
tar_theta[129]=172.981199;
tar_x[130]=27.049097;
tar_y[130]=-0.419389;
tar_theta[130]=173.034812;
tar_x[131]=26.664309;
tar_y[131]=-0.379632;
tar_theta[131]=173.082293;
tar_x[132]=26.277058;
tar_y[132]=-0.345557;
tar_theta[132]=173.147552;
tar_x[133]=25.885662;
tar_y[133]=-0.307547;
tar_theta[133]=173.103133;
tar_x[134]=25.491760;
tar_y[134]=-0.279918;
tar_theta[134]=172.939965;
tar_x[135]=25.110863;
tar_y[135]=-0.242644;
tar_theta[135]=173.046914;
tar_x[136]=24.729360;
tar_y[136]=-0.204362;
tar_theta[136]=173.029183;
tar_x[137]=24.341775;
tar_y[137]=-0.169944;
tar_theta[137]=173.130196;
tar_x[138]=23.930223;
tar_y[138]=-0.134800;
tar_theta[138]=173.103084;
tar_x[139]=23.528384;
tar_y[139]=-0.103873;
tar_theta[139]=173.038920;
tar_x[140]=23.156690;
tar_y[140]=-0.070614;
tar_theta[140]=172.969682;
tar_x[141]=22.784292;
tar_y[141]=-0.035256;
tar_theta[141]=173.018651;
tar_x[142]=22.371539;
tar_y[142]=-0.015723;
tar_theta[142]=173.046358;
tar_x[143]=21.968867;
tar_y[143]=0.007930;
tar_theta[143]=173.042068;
tar_x[144]=21.592170;
tar_y[144]=0.033008;
tar_theta[144]=173.064427;
tar_x[145]=21.237493;
tar_y[145]=0.069399;
tar_theta[145]=173.153632;
tar_x[146]=20.861693;
tar_y[146]=0.103764;
tar_theta[146]=173.142787;
tar_x[147]=20.486163;
tar_y[147]=0.139647;
tar_theta[147]=173.206727;
tar_x[148]=20.113040;
tar_y[148]=0.198278;
tar_theta[148]=173.034553;
tar_x[149]=19.737578;
tar_y[149]=0.230802;
tar_theta[149]=173.079380;
tar_x[150]=19.352564;
tar_y[150]=0.267598;
tar_theta[150]=173.114516;
tar_x[151]=18.966434;
tar_y[151]=0.299936;
tar_theta[151]=173.232981;
tar_x[152]=18.584686;
tar_y[152]=0.327341;
tar_theta[152]=174.301807;
tar_x[153]=18.227637;
tar_y[153]=0.347089;
tar_theta[153]=175.831917;
tar_x[154]=17.852227;
tar_y[154]=0.364189;
tar_theta[154]=175.722909;
tar_x[155]=17.463456;
tar_y[155]=0.377762;
tar_theta[155]=175.635266;
tar_x[156]=17.085715;
tar_y[156]=0.396257;
tar_theta[156]=175.647369;
tar_x[157]=16.714291;
tar_y[157]=0.417675;
tar_theta[157]=175.759069;
tar_x[158]=16.322759;
tar_y[158]=0.429307;
tar_theta[158]=175.918354;
tar_x[159]=15.936694;
tar_y[159]=0.447384;
tar_theta[159]=175.967500;
tar_x[160]=15.553868;
tar_y[160]=0.459843;
tar_theta[160]=177.767362;
tar_x[161]=15.201740;
tar_y[161]=0.459675;
tar_theta[161]=177.820875;
tar_x[162]=14.817683;
tar_y[162]=0.467415;
tar_theta[162]=177.897735;
tar_x[163]=14.438552;
tar_y[163]=0.459180;
tar_theta[163]=177.858799;
tar_x[164]=14.064818;
tar_y[164]=0.467473;
tar_theta[164]=177.935774;
tar_x[165]=13.693273;
tar_y[165]=0.466374;
tar_theta[165]=177.945944;
tar_x[166]=13.317273;
tar_y[166]=0.460208;
tar_theta[166]=177.964668;
tar_x[167]=12.929743;
tar_y[167]=0.458947;
tar_theta[167]=177.916324;
tar_x[168]=12.542218;
tar_y[168]=0.467893;
tar_theta[168]=177.803037;
tar_x[169]=12.159393;
tar_y[169]=0.463213;
tar_theta[169]=177.763855;
tar_x[170]=11.801520;
tar_y[170]=0.458325;
tar_theta[170]=177.766665;
tar_x[171]=11.378184;
tar_y[171]=0.472754;
tar_theta[171]=177.932775;
tar_x[172]=10.988118;
tar_y[172]=0.481070;
tar_theta[172]=178.022655;
tar_x[173]=10.581686;
tar_y[173]=0.479946;
tar_theta[173]=178.020036;
tar_x[174]=10.200064;
tar_y[174]=0.482123;
tar_theta[174]=178.096830;
tar_x[175]=9.808054;
tar_y[175]=0.476615;
tar_theta[175]=177.919012;
tar_x[176]=9.429231;
tar_y[176]=0.482583;
tar_theta[176]=177.955578;
tar_x[177]=9.028631;
tar_y[177]=0.481929;
tar_theta[177]=178.048137;
tar_x[178]=8.656172;
tar_y[178]=0.481879;
tar_theta[178]=177.982822;
tar_x[179]=8.271382;
tar_y[179]=0.480657;
tar_theta[179]=177.978889;
tar_x[180]=7.890256;
tar_y[180]=0.481421;
tar_theta[180]=177.884121;
tar_x[181]=7.503521;
tar_y[181]=0.479844;
tar_theta[181]=177.833928;
tar_x[182]=7.106684;
tar_y[182]=0.494912;
tar_theta[182]=177.827732;
tar_x[183]=6.720846;
tar_y[183]=0.493899;
tar_theta[183]=177.819675;
tar_x[184]=6.359183;
tar_y[184]=0.497938;
tar_theta[184]=177.859976;
tar_x[185]=5.955066;
tar_y[185]=0.500200;
tar_theta[185]=178.056657;
tar_x[186]=5.557247;
tar_y[186]=0.496261;
tar_theta[186]=178.066700;
tar_x[187]=5.181181;
tar_y[187]=0.510701;
tar_theta[187]=178.207693;
tar_x[188]=4.856508;
tar_y[188]=0.508811;
tar_theta[188]=178.827937;
tar_x[189]=4.418280;
tar_y[189]=0.498250;
tar_theta[189]=178.766591;
tar_x[190]=4.050915;
tar_y[190]=0.489416;
tar_theta[190]=178.533021;
tar_x[191]=3.695662;
tar_y[191]=0.480927;
tar_theta[191]=178.565330;
tar_x[192]=3.283577;
tar_y[192]=0.492818;
tar_theta[192]=176.725544;
tar_x[193]=2.917145;
tar_y[193]=0.489245;
tar_theta[193]=176.296790;
tar_x[194]=2.550694;
tar_y[194]=0.510381;
tar_theta[194]=175.249294;
tar_x[195]=2.176952;
tar_y[195]=0.530793;
tar_theta[195]=175.295338;
tar_x[196]=1.792681;
tar_y[196]=0.546609;
tar_theta[196]=175.328568;
tar_x[197]=1.416039;
tar_y[197]=0.560878;
tar_theta[197]=175.308923;
tar_x[198]=1.097583;
tar_y[198]=0.582805;
tar_theta[198]=175.328136;
tar_x[199]=1.003681;
tar_y[199]=0.585509;
tar_theta[199]=175.307812;
tar_x[200]=1.003596;
tar_y[200]=0.587556;
tar_theta[200]=175.320635;
tar_x[201]=1.002684;
tar_y[201]=0.582429;
tar_theta[201]=175.278625;



//ros节点初始化
  ros::init(argc, argv, "track_carto_pp");
  ros::NodeHandle n_; 
  ros::Publisher pub_path;  
  ros::Publisher agv_pub;
  ros::Publisher pub_path_target;
  visualization_msgs::Marker marker;
  visualization_msgs::Marker marker2;
  uint32_t shape;
  visualization_msgs::MarkerArray array;
  geometry_msgs::PoseStamped pose_sta;
  geometry_msgs::PoseStamped pose_target;
  geometry_msgs::Twist msg_twist;
  nav_msgs::Path msg_path;
  nav_msgs::Path msg_target;
  ros::Time current_time;
  tf::TransformListener listener;
  ros::Time current_time_target;
  tf::Quaternion q;
//设置控制频率
  ros::Rate loop_rate(10);

//定义消息发布器
  pub_path= n_.advertise<nav_msgs::Path>("/path_real", 1,true);
  pub_path_target=n_.advertise<nav_msgs::Path>("/path_target",1,true);
  agv_pub=n_.advertise<visualization_msgs::MarkerArray>("target_point", 1);

//变量赋初始值
  num_=0;
  target_x=tar_x[num_];
  target_y=tar_y[num_];
  count_init=0;
  p_size=201;
  re_count=0;
  sum_er=0;
  error_count=0;

//目标轨迹消息赋值
 for(count_path=0;count_path<p_size+1;count_path++)
 {
   pose_target.pose.position.x=tar_x[count_path];
   pose_target.pose.position.y=tar_y[count_path];
   pose_target.pose.position.z=0;
   pose_target.pose.orientation.x=0;
   pose_target.pose.orientation.y=0;
   pose_target.pose.orientation.z=0;
   pose_target.pose.orientation.w=1;
   pose_target.header.stamp=ros::Time::now();
   pose_target.header.frame_id="map";
   msg_target.poses.push_back(pose_target);
   //printf("pose:%f",pose_target.pose.position.x);
   msg_target.header.frame_id="map";
   msg_target.header.stamp=ros::Time::now();
 }

while (ros::ok())
  {
    
    tf::StampedTransform transform;
    try
    {
      listener.lookupTransform("/map", "/laser",
                               ros::Time(0), transform);
    }
    catch (tf::TransformException &ex)   
    {
      ROS_ERROR("%s",ex.what());
      ros::Duration(1.0).sleep();
      continue;
    }
  
//获取AGV实时位姿
  x=transform.getOrigin().x();
  y=transform.getOrigin().y(); 
  q=transform.getRotation(); 
  tf::Matrix3x3(q).getRPY(roll,pitch,yaw);

//目标点初始化
  find_min_ind(x,y,yaw);
  num_=min_ind;

  //dec_min(x,y,tar_x,tar_y);
  //num_=min_ind;

  fun_a=(tar_y[sec_min_ind]-tar_y[min_ind])/(tar_x[sec_min_ind]-tar_x[min_ind]);
  fun_b=tar_y[min_ind]-fun_a*tar_x[min_ind];
  error_ins=fabs(fun_a*x-y+fun_b)/sqrt(fun_a*fun_a+1);

  sum_er=sum_er+error_ins;
  error_count++;
  error=sum_er/error_count;
  

  re_x[re_count]=x;
  re_y[re_count]=y;
  re_d[re_count]=error_ins;

  //设定线速度

  v_pp=0.8;
  d_ym=1.2;

  target_x=tar_x[num_];
  target_y=tar_y[num_];
  d_tar=sqrt((x-target_x)*(x-target_x)+(y-target_y)*(y-target_y));
    while (d_tar<d_ym && ros::ok())
  {
     num_=num_+1;
     if(num_>p_size)
     {
        num_=p_size;
        break;
     }
      target_x=tar_x[num_];
      target_y=tar_y[num_];
     d_tar=sqrt((x-target_x)*(x-target_x)+(y-target_y)*(y-target_y));
  }
  d=sqrt((target_x-x)*(target_x-x)+(target_y-y)*(target_y-y));
  //将目标点转换到车体坐标系
  Eigen::Vector3d v(target_x-x,target_y-y,0);
  Eigen::AngleAxisd r_v(-yaw,Vector3d(0,0,1));
  Eigen::Matrix3d R=r_v.matrix();
  v_result=R*v;
  
  msg_twist.linear.x=v_pp;
  msg_twist.angular.z=2*v_pp*v_result[1]/(d*d);
 

//轨迹终点停车
  if(num_==p_size && d<0.8)
  {
    msg_twist.linear.x=0;
    msg_twist.linear.y=0;
    msg_twist.linear.z=0;
    msg_twist.angular.x=0;
    msg_twist.angular.y=0;
    msg_twist.angular.z=0;
    ROS_INFO("arrive");     
  }

//计算AGV前轮转角
 if(msg_twist.linear.x!=0)
 {
 r=fabs(msg_twist.linear.x/msg_twist.angular.z);
 theta2=atan(1.42/(2*r-1.16))*57.29578;
 theta1=atan(1.42/(2*r+1.16))*57.29578;
 if(msg_twist.angular.z<0)
 {
   theta1=-theta1;
   theta2=-theta2;
 }
 if(msg_twist.angular.z>0)
 {
    theta_temp=theta1;
    theta1=theta2;
    theta2=theta_temp;
 }
  /*if(msg_twist.angular.z==0)
 {
    theta1=0;
    theta2=0;
 }*/

//计算AGV前轮转速
 v2=fabs(msg_twist.angular.z*sqrt(pow(r-0.58,2)+pow(0.71,2)));
 v1=fabs(msg_twist.angular.z*sqrt(pow(r+0.58,2)+pow(0.71,2)));
 }
 else
 {
   theta1=0;
   theta2=0;
   v1=0;
   v2=0;
 }


angle_delta_l=fabs(theta1-last_angle_l);
 angle_delta_r=fabs(theta2-last_angle_r);
 sum_angle_delta=sum_angle_delta+angle_delta_l;
 angle_delta=sum_angle_delta/error_count;
 last_angle_l=theta1;
 last_angle_r=theta2;


//设置CAN通信
  canHandle h;
 canInitializeLibrary();
  h=canOpenChannel(0,canWANT_EXCLUSIVE);
  if(h != canOK)
    {
        char msg[64];
        canGetErrorText((canStatus)h,msg,sizeof(msg));
        fprintf(stderr,"canopenchannel fialied(%s)\n",msg);
        exit(1);

    }
  canSetBusParams(h,BAUD_500K,0,0,0,0,0);
  canBusOn(h);

//将转速转角存入buffer中
 int_theta1=round(theta1*100);
 int_theta2=round(theta2*100);
 int_v1=round(v1*100*52.9);
 int_v2=round(v2*100*52.9);
 int16_t can_angle;
 int16_t can_v;
 //can_angle=htobe16(can_angle);

 if(msg_twist.angular.z<=0)
 {
   re_w[re_count]=theta2;
   re_count++;
    can_angle=int_theta2;
    can_angle=htobe16(can_angle);
    *((int16_t *)&(buffer[2]))=can_angle;
    can_v=int_v1;
    //can_v=htobe16(can_v);
    //ROS_INFO("%d", can_v);
    //*((int16_t *)&(buffer[2])) = can_v;
    buffer[0]=can_v/256;
    buffer[1]=can_v%256;
 }
 else
 {  re_w[re_count]=theta1;
    re_count++;
    can_angle=int_theta1;
    can_angle=htobe16(can_angle);
    *(int16_t*)&buffer[2]=can_angle;
    can_v=int_v2;
    //can_v=htobe16(can_v);
    //ROS_INFO("%d", can_v);
    //*(int16_t*)&buffer[0]=can_v;
    buffer[0]=can_v/256;
    buffer[1]=can_v%256;
 }
 //ROS_INFO("%d, %d", buffer[2], buffer[3]);
if(msg_twist.linear.x==0)
{
  buffer[0]=0;
  buffer[1]=0;
  buffer[2]=0;
  buffer[3]=0;
}

 buffer[4]=1;
 buffer[5]=0; 
 buffer[6]=0;
 buffer[7]=0;
 id=0x311;
 dlc=8;
 flag=0;


 //id=320接口
 /*id=0x320;
 int_theta1=round(theta1*100)+6000;
 int_theta2=round(theta2*100)+6000;
 int_v1=round(v1*1000);
 int_v2=round(v2*1000);
 buffer[0]=int_theta1/256;
 buffer[1]=int_theta1%256;
 buffer[2]=int_theta2/256;
 buffer[3]=int_theta2%256;
 buffer[4]=int_v1/256;
 buffer[5]=int_v1%256; 
 buffer[6]=int_v2/256;
 buffer[7]=int_v2%256;*/

//发布AGV实时轨迹
 pose_sta.pose.position.x=x;
 pose_sta.pose.position.y=y;
 pose_sta.pose.position.z=0;
 pose_sta.pose.orientation.x=q.getX();
 pose_sta.pose.orientation.y=q.getY();
 pose_sta.pose.orientation.z=q.getZ();
 pose_sta.pose.orientation.w=q.getW();
 pose_sta.header.stamp=ros::Time::now();
 pose_sta.header.frame_id="map";
 msg_path.poses.push_back(pose_sta);
 msg_path.header.frame_id="map";
 msg_path.header.stamp=ros::Time::now();

//发布AGV车身姿态，目标点
  array.markers.clear();
  marker.header.frame_id = "map";
  marker.header.stamp = ros::Time::now();
  marker2.header.frame_id = "map";
  marker2.header.stamp = ros::Time::now();
  marker.ns = "b";
  marker2.ns = "b";
  marker2.id = 0;
  marker.id = 1;
  marker.type = visualization_msgs::Marker::SPHERE;
  marker2.type = visualization_msgs::Marker::CUBE;
  marker.action = visualization_msgs::Marker::ADD;
  marker2.action = visualization_msgs::Marker::ADD;

  marker2.pose.position.x = x;
  marker2.pose.position.y = y;
  marker2.pose.position.z = 0;
  marker2.pose.orientation.x = q.getX();
  marker2.pose.orientation.y = q.getY();
  marker2.pose.orientation.z =q.getZ();
  marker2.pose.orientation.w = q.getW();
 
  marker.pose.position.x = target_x;
  marker.pose.position.y = target_y;
  marker.pose.position.z = 0;
  marker.pose.orientation.x = 0.0;
  marker.pose.orientation.y = 0.0;
  marker.pose.orientation.z = 0.0;
  marker.pose.orientation.w = 1.0;

  marker.scale.x = 0.4;
  marker.scale.y = 0.4;
  marker.scale.z = 0.4;
  marker2.scale.x = 0.85;
  marker2.scale.y = 0.7;
  marker2.scale.z = 0.4;

  marker.color.r = 0.0f;
  marker.color.g = 1.0f;
  marker.color.b = 0.0f;
  marker.color.a = 1.0;

  marker2.color.r = 0.0f;
  marker2.color.g = 1.0f;
  marker2.color.b = 0.0f;
  marker2.color.a = 1.0;
  marker.lifetime = ros::Duration();
  marker2.lifetime = ros::Duration();
  array.markers.push_back(marker);
  array.markers.push_back(marker2);

//ROS_INFO("d:%f\n num:%d\n,target_x:%f\n target_y:%f\n",d,num_,target_x,target_y);
 //printf("num:%d,err_ins:%f,error:%f,v:%f,d_ym:%f\n",num_,error_ins,error,msg_twist.linear.x,d_ym);

//发布消息
 pub_path.publish(msg_path);
 pub_path_target.publish(msg_target);
 agv_pub.publish(array);

//发送can报文
 canWrite(h,id,&buffer,dlc,flag);
 canWriteSync(h,500);
 canBusOff(h);   
 canClose(h);

//循环控制
 loop_rate.sleep();
  }
  show_x(re_count);
  printf("end\n");
  show_y(re_count);
  printf("end\n");
  show_d(re_count);
  printf("end\n");
  show_w(re_count);
  return 0;

}