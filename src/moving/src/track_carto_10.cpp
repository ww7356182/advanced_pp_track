#include <ros/ros.h>
#include "geometry_msgs/Twist.h"
#include "nav_msgs/Odometry.h"
#include "math.h"
#include "tf/transform_datatypes.h"
#include "nav_msgs/Path.h"
#include "geometry_msgs/Quaternion.h"
#include "geometry_msgs/PoseStamped.h"
#include <visualization_msgs/MarkerArray.h>
#include <visualization_msgs/Marker.h>
#include<canlib.h>
#include<stdio.h>
#include <ros/ros.h>
#include <tf/transform_listener.h>
#include <geometry_msgs/Twist.h>
//#include "LinearMath/btMatrix3x3.h"
int main(int argc, char **argv)
{
  ros::init(argc, argv, "cmd_vel");
  ros::NodeHandle n_; 
  ros::Publisher pub_;
  ros::Publisher pub_path;  
  ros::Subscriber sub_;
  ros::Subscriber sub_tra;
  geometry_msgs::PoseStamped pose_sta;
  geometry_msgs::PoseStamped pose_target;
  geometry_msgs::Twist msg_twist;
  nav_msgs::Path msg_path;
  nav_msgs::Path msg_target;
  ros::Time current_time;
  int angle;
  double cur_angle;
  double target_x;
  double target_y;
  double tar_x[1000];
  double tar_y[1000];
  int jiaodu;
  int num;
  int num_;
  int count;
  int count_tar;
  double r;
  double theta1,theta2,theta3,theta4,theta_temp;
  double v1,v2,v3,v4;
  
  unsigned int flag;
  long id;
  long id_1;
  unsigned char buffer[8];
  long int msg1,msg_2,msg_3;
  int int_theta1,int_theta2,int_v1,int_v2;
  unsigned int dlc;
  int count_2;
  double d;
  double x,y,z;
  double theta,target_angle;
  tf::TransformListener listener;
  tf::Quaternion q;
  double roll,pitch,yaw;

  
  ros::Rate loop_rate(10);
  pub_ = n_.advertise<geometry_msgs::Twist>("/cmd_vel", 1);
  pub_path= n_.advertise<nav_msgs::Path>("/path", 1,true);
    num_=0;
    num=0;
tar_x[0]=0;
tar_y[0]=0;
tar_x[1]=0.199751;
tar_y[1]=-0.016339;
tar_x[2]=0.404161;
tar_y[2]=-0.025235;
tar_x[3]=0.611001;
tar_y[3]=-0.023895;
tar_x[4]=0.826330;
tar_y[4]=-0.021798;
tar_x[5]=1.029068;
tar_y[5]=-0.020919;
tar_x[6]=1.234349;
tar_y[6]=-0.025096;
tar_x[7]=1.447891;
tar_y[7]=-0.031403;
tar_x[8]=1.657739;
tar_y[8]=-0.029371;
tar_x[9]=1.860738;
tar_y[9]=-0.026386;
tar_x[10]=2.067471;
tar_y[10]=-0.025543;
tar_x[11]=2.279413;
tar_y[11]=-0.024354;
tar_x[12]=2.480075;
tar_y[12]=-0.022881;
tar_x[13]=2.692931;
tar_y[13]=-0.038766;
tar_x[14]=2.897267;
tar_y[14]=-0.038366;
tar_x[15]=3.099026;
tar_y[15]=-0.034337;
tar_x[16]=3.305779;
tar_y[16]=-0.031226;
tar_x[17]=3.510223;
tar_y[17]=-0.037500;
tar_x[18]=3.717412;
tar_y[18]=-0.035753;
tar_x[19]=3.926131;
tar_y[19]=-0.041427;
tar_x[20]=4.139796;
tar_y[20]=-0.038759;
tar_x[21]=4.354706;
tar_y[21]=-0.044708;
tar_x[22]=4.556590;
tar_y[22]=-0.039345;
tar_x[23]=4.766240;
tar_y[23]=-0.036380;
tar_x[24]=4.972468;
tar_y[24]=-0.036104;
tar_x[25]=5.178508;
tar_y[25]=-0.032864;
tar_x[26]=5.388779;
tar_y[26]=-0.035906;
tar_x[27]=5.605046;
tar_y[27]=-0.028609;
tar_x[28]=5.822704;
tar_y[28]=-0.015543;
tar_x[29]=6.028565;
tar_y[29]=-0.016315;
tar_x[30]=6.234359;
tar_y[30]=-0.023701;
tar_x[31]=6.437470;
tar_y[31]=-0.020512;
tar_x[32]=6.637528;
tar_y[32]=-0.027228;
tar_x[33]=6.845204;
tar_y[33]=-0.029358;
tar_x[34]=7.048702;
tar_y[34]=-0.042188;
tar_x[35]=7.184469;
tar_y[35]=-0.050188;
tar_x[36]=7.295752;
tar_y[36]=-0.058706;
tar_x[37]=7.395166;
tar_y[37]=-0.064625;
tar_x[38]=7.523786;
tar_y[38]=-0.083279;
tar_x[39]=7.617554;
tar_y[39]=-0.089059;
tar_x[40]=7.731170;
tar_y[40]=-0.103664;
tar_x[41]=7.836649;
tar_y[41]=-0.123365;
tar_x[42]=7.926716;
tar_y[42]=-0.142843;
tar_x[43]=8.001701;
tar_y[43]=-0.151888;
tar_x[44]=8.089466;
tar_y[44]=-0.168784;
tar_x[45]=8.200982;
tar_y[45]=-0.196192;
tar_x[46]=8.300796;
tar_y[46]=-0.225329;
tar_x[47]=8.406984;
tar_y[47]=-0.252707;
tar_x[48]=8.606128;
tar_y[48]=-0.306536;
tar_x[49]=8.796753;
tar_y[49]=-0.369491;
tar_x[50]=8.991629;
tar_y[50]=-0.425511;
tar_x[51]=9.187419;
tar_y[51]=-0.490228;
tar_x[52]=9.379940;
tar_y[52]=-0.556957;
tar_x[53]=9.574059;
tar_y[53]=-0.619754;
tar_x[54]=9.764008;
tar_y[54]=-0.686424;
tar_x[55]=9.956225;
tar_y[55]=-0.754695;
tar_x[56]=10.140170;
tar_y[56]=-0.814326;
tar_x[57]=10.333187;
tar_y[57]=-0.874773;
tar_x[58]=10.530710;
tar_y[58]=-0.936798;
tar_x[59]=10.719738;
tar_y[59]=-1.002608;
tar_x[60]=10.889514;
tar_y[60]=-1.061746;
tar_x[61]=10.990194;
tar_y[61]=-1.098143;
tar_x[62]=11.091887;
tar_y[62]=-1.136146;
tar_x[63]=11.188294;
tar_y[63]=-1.176269;
tar_x[64]=11.302095;
tar_y[64]=-1.225891;
tar_x[65]=11.393261;
tar_y[65]=-1.259525;
tar_x[66]=11.464187;
tar_y[66]=-1.293179;
tar_x[67]=11.534239;
tar_y[67]=-1.333485;
tar_x[68]=11.605449;
tar_y[68]=-1.364627;
tar_x[69]=11.670414;
tar_y[69]=-1.401367;
tar_x[70]=11.736962;
tar_y[70]=-1.438795;
tar_x[71]=11.810641;
tar_y[71]=-1.481414;
tar_x[72]=11.868152;
tar_y[72]=-1.513947;
tar_x[73]=11.942645;
tar_y[73]=-1.564914;
tar_x[74]=11.999595;
tar_y[74]=-1.597814;
tar_x[75]=12.050645;
tar_y[75]=-1.639210;
tar_x[76]=12.096660;
tar_y[76]=-1.675383;
tar_x[77]=12.142634;
tar_y[77]=-1.710665;
tar_x[78]=12.192803;
tar_y[78]=-1.747853;
tar_x[79]=12.234190;
tar_y[79]=-1.782958;
tar_x[80]=12.279455;
tar_y[80]=-1.819849;
tar_x[81]=12.329065;
tar_y[81]=-1.878330;
tar_x[82]=12.372603;
tar_y[82]=-1.910722;
tar_x[83]=12.422018;
tar_y[83]=-1.965305;
tar_x[84]=12.463694;
tar_y[84]=-1.999846;
tar_x[85]=12.514606;
tar_y[85]=-2.052987;
tar_x[86]=12.562539;
tar_y[86]=-2.110072;
tar_x[87]=12.614824;
tar_y[87]=-2.166523;
tar_x[88]=12.670743;
tar_y[88]=-2.232959;
tar_x[89]=12.737725;
tar_y[89]=-2.316548;
tar_x[90]=12.810108;
tar_y[90]=-2.406946;
tar_x[91]=12.905443;
tar_y[91]=-2.522036;
tar_x[92]=13.020230;
tar_y[92]=-2.687316;
tar_x[93]=13.136624;
tar_y[93]=-2.853392;
tar_x[94]=13.250613;
tar_y[94]=-3.023401;
tar_x[95]=13.359567;
tar_y[95]=-3.172623;
tar_x[96]=13.478540;
tar_y[96]=-3.329646;
tar_x[97]=13.608560;
tar_y[97]=-3.486614;
tar_x[98]=13.730814;
tar_y[98]=-3.650976;
tar_x[99]=13.871621;
tar_y[99]=-3.803895;
tar_x[100]=14.008815;
tar_y[100]=-3.959675;
tar_x[101]=14.132072;
tar_y[101]=-4.120309;
tar_x[102]=14.263911;
tar_y[102]=-4.280716;
tar_x[103]=14.381386;
tar_y[103]=-4.421768;
tar_x[104]=14.484052;
tar_y[104]=-4.554762;
tar_x[105]=14.553468;
tar_y[105]=-4.637449;
tar_x[106]=14.630682;
tar_y[106]=-4.716511;
tar_x[107]=14.705391;
tar_y[107]=-4.789149;
tar_x[108]=14.784898;
tar_y[108]=-4.870476;
tar_x[109]=14.871740;
tar_y[109]=-4.947684;
tar_x[110]=14.942721;
tar_y[110]=-5.021394;
tar_x[111]=15.029514;
tar_y[111]=-5.099504;
tar_x[112]=15.100809;
tar_y[112]=-5.170095;
tar_x[113]=15.198710;
tar_y[113]=-5.231511;
tar_x[114]=15.273195;
tar_y[114]=-5.300451;
tar_x[115]=15.340897;
tar_y[115]=-5.361345;
tar_x[116]=15.426978;
tar_y[116]=-5.421670;
tar_x[117]=15.518774;
tar_y[117]=-5.481812;
tar_x[118]=15.603287;
tar_y[118]=-5.541652;
tar_x[119]=15.679174;
tar_y[119]=-5.598375;
tar_x[120]=15.769885;
tar_y[120]=-5.653855;
tar_x[121]=15.859474;
tar_y[121]=-5.709685;
tar_x[122]=15.946617;
tar_y[122]=-5.761994;
tar_x[123]=16.032111;
tar_y[123]=-5.811226;
tar_x[124]=16.122107;
tar_y[124]=-5.860549;
tar_x[125]=16.213956;
tar_y[125]=-5.913046;
tar_x[126]=16.302002;
tar_y[126]=-5.959968;
tar_x[127]=16.401014;
tar_y[127]=-6.007188;
tar_x[128]=16.505482;
tar_y[128]=-6.054021;
tar_x[129]=16.606139;
tar_y[129]=-6.096130;
tar_x[130]=16.700395;
tar_y[130]=-6.136468;
tar_x[131]=16.810043;
tar_y[131]=-6.177098;
tar_x[132]=16.907683;
tar_y[132]=-6.209797;
tar_x[133]=16.994585;
tar_y[133]=-6.244086;
tar_x[134]=17.095369;
tar_y[134]=-6.279798;
tar_x[135]=17.193982;
tar_y[135]=-6.310298;
tar_x[136]=17.304420;
tar_y[136]=-6.335169;
tar_x[137]=17.469201;
tar_y[137]=-6.374031;
tar_x[138]=17.646542;
tar_y[138]=-6.422895;
tar_x[139]=17.816316;
tar_y[139]=-6.466809;
tar_x[140]=18.006211;
tar_y[140]=-6.506704;
tar_x[141]=18.181497;
tar_y[141]=-6.546777;
tar_x[142]=18.308781;
tar_y[142]=-6.565093;
tar_x[143]=18.437256;
tar_y[143]=-6.576693;
tar_x[144]=18.553429;
tar_y[144]=-6.593619;
tar_x[145]=18.660941;
tar_y[145]=-6.604557;
tar_x[146]=18.769185;
tar_y[146]=-6.614373;
tar_x[147]=18.856286;
tar_y[147]=-6.634927;
tar_x[148]=18.978077;
tar_y[148]=-6.640671;
tar_x[149]=19.095031;
tar_y[149]=-6.637329;
tar_x[150]=19.189141;
tar_y[150]=-6.647989;
tar_x[151]=19.302687;
tar_y[151]=-6.643642;
tar_x[152]=19.413996;
tar_y[152]=-6.648688;
tar_x[153]=19.530806;
tar_y[153]=-6.642463;
tar_x[154]=19.648827;
tar_y[154]=-6.634253;
tar_x[155]=19.751997;
tar_y[155]=-6.636518;
tar_x[156]=19.831967;
tar_y[156]=-6.617375;
tar_x[157]=19.912946;
tar_y[157]=-6.616366;
tar_x[158]=19.984782;
tar_y[158]=-6.602583;
tar_x[159]=20.063666;
tar_y[159]=-6.589615;
tar_x[160]=20.135458;
tar_y[160]=-6.572809;
tar_x[161]=20.217702;
tar_y[161]=-6.560738;
tar_x[162]=20.297914;
tar_y[162]=-6.544521;
tar_x[163]=20.377650;
tar_y[163]=-6.519058;
tar_x[164]=20.455121;
tar_y[164]=-6.503887;
tar_x[165]=20.534174;
tar_y[165]=-6.475900;
tar_x[166]=20.606353;
tar_y[166]=-6.456111;
tar_x[167]=20.695532;
tar_y[167]=-6.433704;
tar_x[168]=20.757577;
tar_y[168]=-6.412136;
tar_x[169]=20.833206;
tar_y[169]=-6.387340;
tar_x[170]=20.899039;
tar_y[170]=-6.362295;
tar_x[171]=20.976104;
tar_y[171]=-6.334681;
tar_x[172]=21.041139;
tar_y[172]=-6.309656;
tar_x[173]=21.116530;
tar_y[173]=-6.275114;
tar_x[174]=21.184121;
tar_y[174]=-6.251172;
tar_x[175]=21.250883;
tar_y[175]=-6.214921;
tar_x[176]=21.319601;
tar_y[176]=-6.186128;
tar_x[177]=21.379080;
tar_y[177]=-6.144964;
tar_x[178]=21.452611;
tar_y[178]=-6.113295;
tar_x[179]=21.523380;
tar_y[179]=-6.068785;
tar_x[180]=21.591698;
tar_y[180]=-6.041251;
tar_x[181]=21.657903;
tar_y[181]=-5.991505;
tar_x[182]=21.718634;
tar_y[182]=-5.957541;
tar_x[183]=21.792261;
tar_y[183]=-5.911928;
tar_x[184]=21.854610;
tar_y[184]=-5.862092;
tar_x[185]=21.920262;
tar_y[185]=-5.817127;
tar_x[186]=21.982199;
tar_y[186]=-5.770584;
tar_x[187]=22.033974;
tar_y[187]=-5.720269;
tar_x[188]=22.094908;
tar_y[188]=-5.673282;
tar_x[189]=22.152550;
tar_y[189]=-5.622428;
tar_x[190]=22.214833;
tar_y[190]=-5.575283;
tar_x[191]=22.267882;
tar_y[191]=-5.520205;
tar_x[192]=22.323523;
tar_y[192]=-5.475273;
tar_x[193]=22.362447;
tar_y[193]=-5.435273;
tar_x[194]=22.400217;
tar_y[194]=-5.392536;
tar_x[195]=22.441718;
tar_y[195]=-5.356105;
tar_x[196]=22.480629;
tar_y[196]=-5.311896;
tar_x[197]=22.508766;
tar_y[197]=-5.277183;
tar_x[198]=22.544277;
tar_y[198]=-5.235890;
tar_x[199]=22.575839;
tar_y[199]=-5.200659;
tar_x[200]=22.608894;
tar_y[200]=-5.158979;
tar_x[201]=22.633007;
tar_y[201]=-5.118927;
tar_x[202]=22.670884;
tar_y[202]=-5.074837;
tar_x[203]=22.691546;
tar_y[203]=-5.038086;
tar_x[204]=22.717232;
tar_y[204]=-4.995760;
tar_x[205]=22.738048;
tar_y[205]=-4.954482;
tar_x[206]=22.770393;
tar_y[206]=-4.906385;
tar_x[207]=22.789064;
tar_y[207]=-4.867849;
tar_x[208]=22.820443;
tar_y[208]=-4.821795;
tar_x[209]=22.843394;
tar_y[209]=-4.775845;
tar_x[210]=22.860531;
tar_y[210]=-4.732885;
tar_x[211]=22.881706;
tar_y[211]=-4.689804;
tar_x[212]=22.898369;
tar_y[212]=-4.642734;
tar_x[213]=22.922512;
tar_y[213]=-4.596189;
tar_x[214]=22.941093;
tar_y[214]=-4.549001;
tar_x[215]=22.964566;
tar_y[215]=-4.503335;
tar_x[216]=22.973011;
tar_y[216]=-4.457772;
tar_x[217]=22.992393;
tar_y[217]=-4.409241;
tar_x[218]=23.013287;
tar_y[218]=-4.360936;
tar_x[219]=23.018765;
tar_y[219]=-4.310498;
tar_x[220]=23.041211;
tar_y[220]=-4.259199;
tar_x[221]=23.048199;
tar_y[221]=-4.207038;
tar_x[222]=23.057165;
tar_y[222]=-4.157036;
tar_x[223]=23.075345;
tar_y[223]=-4.110533;
tar_x[224]=23.086320;
tar_y[224]=-4.062256;
tar_x[225]=23.087660;
tar_y[225]=-4.012973;
tar_x[226]=23.100235;
tar_y[226]=-3.958929;
tar_x[227]=23.102517;
tar_y[227]=-3.910508;
tar_x[228]=23.113211;
tar_y[228]=-3.860274;
tar_x[229]=23.117346;
tar_y[229]=-3.799202;
tar_x[230]=23.130128;
tar_y[230]=-3.750413;
tar_x[231]=23.130067;
tar_y[231]=-3.691475;
tar_x[232]=23.126370;
tar_y[232]=-3.640954;
tar_x[233]=23.130444;
tar_y[233]=-3.584603;
tar_x[234]=23.131223;
tar_y[234]=-3.541379;
tar_x[235]=23.138018;
tar_y[235]=-3.492657;
tar_x[236]=23.134321;
tar_y[236]=-3.441666;
tar_x[237]=23.128905;
tar_y[237]=-3.387110;
tar_x[238]=23.120272;
tar_y[238]=-3.329927;
tar_x[239]=23.115187;
tar_y[239]=-3.273596;
tar_x[240]=23.110453;
tar_y[240]=-3.222755;
tar_x[241]=23.103869;
tar_y[241]=-3.161355;
tar_x[242]=23.081656;
tar_y[242]=-3.109750;
tar_x[243]=23.084466;
tar_y[243]=-3.061605;
tar_x[244]=23.076021;
tar_y[244]=-3.015805;
tar_x[245]=23.061157;
tar_y[245]=-2.953438;
tar_x[246]=23.046540;
tar_y[246]=-2.898395;
tar_x[247]=23.038001;
tar_y[247]=-2.849651;
tar_x[248]=23.027457;
tar_y[248]=-2.801291;
tar_x[249]=23.001232;
tar_y[249]=-2.760803;
tar_x[250]=22.991697;
tar_y[250]=-2.710189;
tar_x[251]=22.975930;
tar_y[251]=-2.661136;
tar_x[252]=22.961177;
tar_y[252]=-2.612146;
tar_x[253]=22.939041;
tar_y[253]=-2.565477;
tar_x[254]=22.919011;
tar_y[254]=-2.523394;
tar_x[255]=22.905460;
tar_y[255]=-2.468841;
tar_x[256]=22.884072;
tar_y[256]=-2.422410;
tar_x[257]=22.858303;
tar_y[257]=-2.381030;
tar_x[258]=22.836160;
tar_y[258]=-2.335752;
tar_x[259]=22.810961;
tar_y[259]=-2.283827;
tar_x[260]=22.784833;
tar_y[260]=-2.239316;
tar_x[261]=22.758296;
tar_y[261]=-2.193713;
tar_x[262]=22.726383;
tar_y[262]=-2.145957;
tar_x[263]=22.698065;
tar_y[263]=-2.106659;
tar_x[264]=22.665252;
tar_y[264]=-2.059391;
tar_x[265]=22.640369;
tar_y[265]=-2.014168;
tar_x[266]=22.604499;
tar_y[266]=-1.974964;
tar_x[267]=22.574331;
tar_y[267]=-1.927906;
tar_x[268]=22.536312;
tar_y[268]=-1.885297;
tar_x[269]=22.501301;
tar_y[269]=-1.844663;
tar_x[270]=22.463252;
tar_y[270]=-1.802195;
tar_x[271]=22.426741;
tar_y[271]=-1.761472;
tar_x[272]=22.382275;
tar_y[272]=-1.724099;
tar_x[273]=22.342642;
tar_y[273]=-1.686882;
tar_x[274]=22.303825;
tar_y[274]=-1.651058;
tar_x[275]=22.261814;
tar_y[275]=-1.607856;
tar_x[276]=22.224246;
tar_y[276]=-1.570874;
tar_x[277]=22.178242;
tar_y[277]=-1.542970;
tar_x[278]=22.131312;
tar_y[278]=-1.507216;
tar_x[279]=22.091322;
tar_y[279]=-1.471820;
tar_x[280]=22.049032;
tar_y[280]=-1.435986;
tar_x[281]=22.002225;
tar_y[281]=-1.407190;
tar_x[282]=21.952223;
tar_y[282]=-1.375158;
tar_x[283]=21.908453;
tar_y[283]=-1.342665;
tar_x[284]=21.858797;
tar_y[284]=-1.313897;
tar_x[285]=21.807544;
tar_y[285]=-1.285843;
tar_x[286]=21.759271;
tar_y[286]=-1.257511;
tar_x[287]=21.708401;
tar_y[287]=-1.230245;
tar_x[288]=21.655594;
tar_y[288]=-1.206308;
tar_x[289]=21.607021;
tar_y[289]=-1.179484;
tar_x[290]=21.556704;
tar_y[290]=-1.155418;
tar_x[291]=21.501244;
tar_y[291]=-1.132564;
tar_x[292]=21.443669;
tar_y[292]=-1.116617;
tar_x[293]=21.381589;
tar_y[293]=-1.085159;
tar_x[294]=21.310683;
tar_y[294]=-1.060786;
tar_x[295]=21.243311;
tar_y[295]=-1.036237;
tar_x[296]=21.167765;
tar_y[296]=-1.012712;
tar_x[297]=21.100427;
tar_y[297]=-0.991466;
tar_x[298]=21.026489;
tar_y[298]=-0.965919;
tar_x[299]=20.953655;
tar_y[299]=-0.945501;
tar_x[300]=20.879960;
tar_y[300]=-0.924810;
tar_x[301]=20.806638;
tar_y[301]=-0.913141;
tar_x[302]=20.737705;
tar_y[302]=-0.891741;
tar_x[303]=20.648495;
tar_y[303]=-0.870066;
tar_x[304]=20.544737;
tar_y[304]=-0.850751;
tar_x[305]=20.432228;
tar_y[305]=-0.838655;
tar_x[306]=20.318038;
tar_y[306]=-0.821413;
tar_x[307]=20.214918;
tar_y[307]=-0.805461;
tar_x[308]=20.051565;
tar_y[308]=-0.792580;
tar_x[309]=19.860677;
tar_y[309]=-0.780019;
tar_x[310]=19.667202;
tar_y[310]=-0.767119;
tar_x[311]=19.464579;
tar_y[311]=-0.758199;
tar_x[312]=19.260879;
tar_y[312]=-0.752988;
tar_x[313]=19.054562;
tar_y[313]=-0.741729;
tar_x[314]=18.846994;
tar_y[314]=-0.737948;
tar_x[315]=18.643747;
tar_y[315]=-0.726163;
tar_x[316]=18.443367;
tar_y[316]=-0.719652;
tar_x[317]=18.242817;
tar_y[317]=-0.711029;
tar_x[318]=18.032761;
tar_y[318]=-0.701350;
tar_x[319]=17.828273;
tar_y[319]=-0.694156;
tar_x[320]=17.622927;
tar_y[320]=-0.688206;
tar_x[321]=17.408104;
tar_y[321]=-0.676410;
tar_x[322]=17.208149;
tar_y[322]=-0.669529;
tar_x[323]=17.002546;
tar_y[323]=-0.665308;
tar_x[324]=16.798307;
tar_y[324]=-0.654379;
tar_x[325]=16.591701;
tar_y[325]=-0.649839;
tar_x[326]=16.377688;
tar_y[326]=-0.638821;
tar_x[327]=16.166943;
tar_y[327]=-0.626485;
tar_x[328]=15.949740;
tar_y[328]=-0.614972;
tar_x[329]=15.732717;
tar_y[329]=-0.610495;
tar_x[330]=15.524184;
tar_y[330]=-0.600450;
tar_x[331]=15.315088;
tar_y[331]=-0.597695;
tar_x[332]=15.102939;
tar_y[332]=-0.586393;
tar_x[333]=14.896489;
tar_y[333]=-0.579757;
tar_x[334]=14.896489;
tar_y[334]=-0.579757;
tar_x[335]=14.689480;
tar_y[335]=-0.570261;
tar_x[336]=14.483502;
tar_y[336]=-0.567042;
tar_x[337]=14.270817;
tar_y[337]=-0.564467;
tar_x[338]=14.064652;
tar_y[338]=-0.559703;
tar_x[339]=13.850120;
tar_y[339]=-0.543264;
tar_x[340]=13.635650;
tar_y[340]=-0.537504;
tar_x[341]=13.420607;
tar_y[341]=-0.539304;
tar_x[342]=13.218689;
tar_y[342]=-0.539035;
tar_x[343]=13.001247;
tar_y[343]=-0.535159;
tar_x[344]=12.797490;
tar_y[344]=-0.528012;
tar_x[345]=12.581933;
tar_y[345]=-0.515549;
tar_x[346]=12.376059;
tar_y[346]=-0.505148;
tar_x[347]=12.160700;
tar_y[347]=-0.502132;
tar_x[348]=11.959061;
tar_y[348]=-0.494258;
tar_x[349]=11.757901;
tar_y[349]=-0.487346;
tar_x[350]=11.551954;
tar_y[350]=-0.485873;
tar_x[351]=11.346325;
tar_y[351]=-0.475089;
tar_x[352]=11.133330;
tar_y[352]=-0.465795;
tar_x[353]=10.927163;
tar_y[353]=-0.458297;
tar_x[354]=10.717195;
tar_y[354]=-0.456008;
tar_x[355]=10.509885;
tar_y[355]=-0.453099;
tar_x[356]=10.310047;
tar_y[356]=-0.440650;
tar_x[357]=10.096440;
tar_y[357]=-0.439305;
tar_x[358]=9.892590;
tar_y[358]=-0.440354;
tar_x[359]=9.683606;
tar_y[359]=-0.435224;
tar_x[360]=9.473487;
tar_y[360]=-0.426810;
tar_x[361]=9.272576;
tar_y[361]=-0.433409;
tar_x[362]=9.065353;
tar_y[362]=-0.433118;
tar_x[363]=8.862476;
tar_y[363]=-0.428204;
tar_x[364]=8.658026;
tar_y[364]=-0.427232;
tar_x[365]=8.456867;
tar_y[365]=-0.425912;
tar_x[366]=8.252252;
tar_y[366]=-0.416410;
tar_x[367]=8.047331;
tar_y[367]=-0.412007;
tar_x[368]=7.845874;
tar_y[368]=-0.415145;
tar_x[369]=7.635596;
tar_y[369]=-0.407460;
tar_x[370]=7.427712;
tar_y[370]=-0.413151;
tar_x[371]=7.227500;
tar_y[371]=-0.410500;
tar_x[372]=7.024535;
tar_y[372]=-0.406462;
tar_x[373]=6.817209;
tar_y[373]=-0.400878;
tar_x[374]=6.607246;
tar_y[374]=-0.399200;
tar_x[375]=6.401973;
tar_y[375]=-0.399251;
tar_x[376]=6.192973;
tar_y[376]=-0.393707;
tar_x[377]=5.989141;
tar_y[377]=-0.394176;
tar_x[378]=5.782005;
tar_y[378]=-0.382318;
tar_x[379]=5.577341;
tar_y[379]=-0.380272;
tar_x[380]=5.373177;
tar_y[380]=-0.379015;
tar_x[381]=5.169882;
tar_y[381]=-0.372713;
tar_x[382]=4.962129;
tar_y[382]=-0.374029;
tar_x[383]=4.757635;
tar_y[383]=-0.370459;
tar_x[384]=4.550556;
tar_y[384]=-0.367820;
tar_x[385]=4.343282;
tar_y[385]=-0.361750;
tar_x[386]=4.135874;
tar_y[386]=-0.361467;
tar_x[387]=3.931083;
tar_y[387]=-0.358885;
tar_x[388]=3.723568;
tar_y[388]=-0.355260;
tar_x[389]=3.519907;
tar_y[389]=-0.358531;
tar_x[390]=3.320081;
tar_y[390]=-0.349685;
tar_x[391]=3.114342;
tar_y[391]=-0.348346;
tar_x[392]=2.911752;
tar_y[392]=-0.344448;
tar_x[393]=2.706287;
tar_y[393]=-0.343868;
tar_x[394]=2.503886;
tar_y[394]=-0.331041;
tar_x[395]=2.299535;
tar_y[395]=-0.336284;
tar_x[396]=2.091092;
tar_y[396]=-0.341298;
tar_x[397]=1.887067;
tar_y[397]=-0.325557;
tar_x[398]=1.681838;
tar_y[398]=-0.326173;
tar_x[399]=1.476524;
tar_y[399]=-0.327121;
tar_x[400]=1.275344;
tar_y[400]=-0.319825;
tar_x[401]=1.067429;
tar_y[401]=-0.317423;
tar_x[402]=0.867088;
tar_y[402]=-0.313221;
tar_x[403]=0.664870;
tar_y[403]=-0.317316;
tar_x[404]=0.463066;
tar_y[404]=-0.315229;
tar_x[405]=0.259262;
tar_y[405]=-0.322535;
tar_x[406]=0.056430;
tar_y[406]=-0.322391;
tar_x[407]=-0.152402;
tar_y[407]=-0.327018;
tar_x[408]=-0.362030;
tar_y[408]=-0.326713;
tar_x[409]=-0.563523;
tar_y[409]=-0.330971;
tar_x[410]=-0.770542;
tar_y[410]=-0.332714;

/*tar_x[35]=-0.487346;
tar_y[35]=0.000000;
tar_x[36]=-0.435224;
tar_y[36]=0.000000;
tar_x[37]=0;
tar_y[37]=0;
tar_x[38]=14.896489;
tar_y[38]=-0.579757;
tar_x[39]=12.797490;
tar_y[39]=-0.528012;
tar_x[40]=10.717195;
tar_y[40]=-0.456008;
tar_x[41]=8.658026;
tar_y[41]=-0.427232;
tar_x[42]=6.607246;
tar_y[42]=-0.399200;
tar_x[43]=4.550556;
tar_y[43]=-0.367820;
tar_x[44]=2.503886;
tar_y[44]=-0.331041;
tar_x[45]=0.463066;
tar_y[45]=-0.315229;
tar_x[46]=0;
tar_y[46]=0;*/

 
  while (ros::ok())
  {
    tf::StampedTransform transform;
    try
    {
      listener.lookupTransform("/map", "/laser",
                               ros::Time(0), transform);
    }
    catch (tf::TransformException &ex) 
    {
      ROS_ERROR("%s",ex.what());
      ros::Duration(1.0).sleep();
      continue;
    }
  x=transform.getOrigin().x();
  y=transform.getOrigin().y(); 
  q=transform.getRotation();
  tf::Matrix3x3(q).getRPY(roll,pitch,yaw);
  d=sqrt((target_x-x)*(target_x-x)+(target_y-y)*(target_y-y));
    if(target_y-y<0.01 && target_x-x>0)
  {
     target_angle=0;
  }
  if(target_x-x>0 && target_y-y>0)
  {
    target_angle=atan((target_y-y)/(target_x-x))*57.29578;
  }
    if(target_x-x>0 && target_y-y<0)
  {
    target_angle=atan((target_y-y)/(target_x-x))*57.29578;
  }
  if(target_x-x<0 && target_y-y>0)
  {
    target_angle=180+atan((target_y-y)/(target_x-x))*57.29578;
  }
   if(target_x-x<0 && target_y-y<0)
  {
    target_angle=-180+atan((target_y-y)/(target_x-x))*57.29578;
  } 
  /*cur_angle=yaw*57.29578;
  if(cur_angle<0)
  {
    cur_angle=360+cur_angle;
  }*/
  theta=target_angle-yaw*57.29578;
  if(theta>180)
  {
    theta=theta-360;
  }
  if(theta<-180)
  {
    theta=theta+360;
  }
  if(theta==180||theta==-180)
  {
    ROS_INFO("the angle of agv is inverse!!!");
  }
  if(d<4)
  {
    if(d<0.2)
    {

      num_=num_+5;
      if(num_>410)
      {
        num_=410;
        msg_twist.linear.x=0;
        msg_twist.linear.y=0;
        msg_twist.linear.z=0;
        msg_twist.angular.x=0;
        msg_twist.angular.y=0;
        msg_twist.angular.z=0;
        ROS_INFO("arrive");
      }
      else
      {
      target_x=tar_x[num_];
      target_y=tar_y[num_];
      }
    }
    else
      {msg_twist.linear.x=0.4;}
  }
  else
  {
    msg_twist.linear.x=0.4;
  }
/*if(theta>180)
{
  msg_twist.angular.z=-0.5;
}
if(theta<-180)
{
  msg_twist.angular.z=0.5;
}*/
if(theta<40 && theta>20)
 {
    msg_twist.angular.z=3*theta/400;
 }
 if(theta<20&&theta>0)
 {
   msg_twist.angular.z=3*theta/400;
 }
 if(theta==40 || theta>40)
 {
   msg_twist.angular.z=0.3;
 }
 if(theta<0 && theta>-20)
 {
   msg_twist.angular.z=3*theta/400;
 }
 if(theta<-20 && theta>-40)
 {
    msg_twist.angular.z=3*theta/400;//-(fabs(theta)-20)/100;
 }
 if(theta==20)
 {
   msg_twist.angular.z=0.15;
 }
 if(theta==-20)
 {
   msg_twist.angular.z=-0.15;
 }
 if(theta<-40 || theta==-40)
 {
    msg_twist.angular.z=-0.3;
 }
  /*if(theta>180 || theta==180)
 {
    msg_twist.angular.z=-0.1;
 }
  if(theta<-180 || theta==-180)
 {
    msg_twist.angular.z=0.1;
 }*/
 if(msg_twist.linear.x!=0)
 {
 r=fabs(msg_twist.linear.x/msg_twist.angular.z);
 theta2=atan(1.42/(2*r-1.16))*57.29578;
 theta1=atan(1.42/(2*r+1.16))*57.29578;
 if(msg_twist.angular.z<0)
 {
   theta1=-theta1;
   theta2=-theta2;
 }
 if(msg_twist.angular.z>0)
 {
    theta_temp=theta1;
    theta1=theta2;
    theta2=theta_temp;
 }
  if(msg_twist.angular.z==0)
 {
    theta1=0;
    theta2=0;
 }
 v2=fabs(msg_twist.angular.z*sqrt(pow(r-0.58,2)+pow(0.71,2)));
 v1=fabs(msg_twist.angular.z*sqrt(pow(r+0.58,2)+pow(0.71,2)));
 }
 else
 {
   theta1=0;
   theta2=0;
   v1=0;
   v2=0;
 }
  canHandle h;
 canInitializeLibrary();
  h=canOpenChannel(0,canWANT_EXCLUSIVE);
  if(h != canOK)
    {
        char msg[64];
        canGetErrorText((canStatus)h,msg,sizeof(msg));
        fprintf(stderr,"canopenchannel fialied(%s)\n",msg);
        exit(1);

    }
  canSetBusParams(h,BAUD_500K,0,0,0,0,0);
    canBusOn(h);
 int_theta1=round(theta1*100)+6000;
 int_theta2=round(theta2*100)+6000;
 int_v1=round(v1*1000);
 int_v2=round(v2*1000);
 buffer[0]=int_theta1/256;
 buffer[1]=int_theta1%256;
 buffer[2]=int_theta2/256;
 buffer[3]=int_theta2%256;
 buffer[4]=int_v1/256;
 buffer[5]=int_v1%256; 
 buffer[6]=int_v2/256;
 buffer[7]=int_v2%256;
 id=0x320;
 dlc=8;
 flag=0;
 pose_sta.pose.position.x=x;
 pose_sta.pose.position.y=y;
 pose_sta.pose.position.z=0;
 pose_sta.pose.orientation.x=q.getX();
 pose_sta.pose.orientation.y=q.getY();
 pose_sta.pose.orientation.z=q.getZ();
 pose_sta.pose.orientation.w=q.getW();
 pose_sta.header.stamp=current_time;
 pose_sta.header.frame_id="map";
 msg_path.poses.push_back(pose_sta);
 msg_path.header.frame_id="map";
 msg_path.header.stamp=current_time;
 ROS_INFO("d:%f,theta:%f,target_x:%f,target_y:%f,target_angle:%f,X:%f,Y:%f,theta1:%f,theta2:%f,v1:%f,v2:%f,num:%d",d,theta,target_x,target_y,target_angle,x,y,theta1,theta2,v1,v2,num_);
 //ROS_INFO("theta1:%f,theta2:%f,v1:%f,v2:%f",theta1,theta2,v1,v2);
 pub_.publish(msg_twist);
 //pub_path.publish(msg_path);

 canWrite(h,id,&buffer,dlc,flag);
 canWriteSync(h,500);
 //ROS_INFO("send");
 //rate.sleep();
 canBusOff(h);   
  canClose(h);
 loop_rate.sleep();
  }
  
  return 0;

}